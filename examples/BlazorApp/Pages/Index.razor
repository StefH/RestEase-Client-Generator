@page "/"
@using System.IO;
@using System.Text
@using Microsoft.OpenApi.Readers
@using RestEaseClientGenerator.Settings
@using RestEaseClientGenerator.Types

@inject IFileReaderService FileReaderService
@inject IRestEaseCodeGenerator CodeGenerator


<h1>Hello, world!</h1>

<div class="row">
    <input type="file" @ref=InputTypeFileElement /><button @onclick=ReadFile>Read file and Generate</button>
</div>
<div class="row">
    <label for="@FileName">FileName</label>
    <input @bind="FileName" />
</div>
<div class="row">
    <input @bind="Contents" />
</div>

@functions {
    string FileName;
    string Contents;
    ElementReference InputTypeFileElement;

    public async Task ReadFile()
    {
        foreach (IFileReference file in await FileReaderService.CreateReference(InputTypeFileElement).EnumerateFilesAsync())
        {
            var fileInfo = await file.ReadFileInfoAsync();

            await using var memoryStream = await file.CreateMemoryStreamAsync();
            FileName = fileInfo.Name;

            var petStoreOpenApi3Settings = new GeneratorSettings
            {
                SingleFile = true,
                Namespace = "RestEaseClientGeneratorConsoleApp.Examples.PetStoreOpenApi302",
                ApiName = "PetStoreOpenApi3",
                GenerateFormUrlEncodedExtensionMethods = true,
                GenerateMultipartFormDataExtensionMethods = true,
                GenerateApplicationOctetStreamExtensionMethods = true,
                ApplicationOctetStreamType = ApplicationOctetStreamType.ByteArray,
                PreferredContentType = ContentType.ApplicationJson,
                DefineAllMethodHeadersOnInterface = true,
                MethodReturnType = MethodReturnType.Type,
                PreferredEnumType = EnumType.Enum
            };
            var result = CodeGenerator.GenerateFromStream(memoryStream, petStoreOpenApi3Settings, out OpenApiDiagnostic diagnostic);
            Contents = result.First().Content;
        }
    }
}