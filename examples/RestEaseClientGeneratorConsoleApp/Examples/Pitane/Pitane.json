{
    "openapi": "3.0.3",
    "info": {
        "title": "Pitane Mobility",
        "description": "Pitane Network API v3.0.1 - Pitane B.V. <br/> Pitane API - MaaS Mobility Provider - TOMP API support<br/> Last update - 2022-01-26 - [More information](https://pitane.dev) <br/>",
        "version": "3.0.1",
        "contact": {
            "email": "helpdesk@pitane.nl"
        },
        "license": {
            "name": "Pitane B.V.",
            "url": "https://pitane.dev"
        }
    },
    "servers": [
        {
            "url": "{protocol}://{host}/pitane/rest/TPV3/Service/{api}/{output}/",
            "variables": {
                "host": {
                    "default": "accept.pitane.dev",
                    "enum": [
                        "accept.pitane.dev",
                        "api.pitane.dev",
                        "kantoor.pitane.dev",
                        "hermes.pitane.network"
                    ]
                },
                "api": {
                    "default": "bd7f7507-7c49-475c-9281-867e4a35b244"
                },
                "output": {
                    "default": "json",
                    "enum": [
                        "json",
                        "xml",
                        "html"
                    ]
                },
                "protocol": {
                    "default": "https",
                    "enum": [
                        "http",
                        "https"
                    ]
                },
                "port": {
                    "default": "443",
                    "enum": [
                        "443",
                        "80"
                    ]
                }
            }
        },
        {
            "url": "{protocol}://{host}/pitane/rest/TPV3/EasyTravel/",
            "variables": {
                "host": {
                    "default": "accept.pitane.dev",
                    "enum": [
                        "accept.pitane.dev",
                        "api.pitane.dev",
                        "kantoor.pitane.dev"
                    ]
                },
                "api": {
                    "default": "bd7f7507-7c49-475c-9281-867e4a35b244"
                },
                "output": {
                    "default": "json",
                    "enum": [
                        "json"
                    ]
                },
                "protocol": {
                    "default": "https",
                    "enum": [
                        "http",
                        "https"
                    ]
                },
                "port": {
                    "default": "443",
                    "enum": [
                        "443",
                        "80"
                    ]
                }
            }
        },
        {
            "url": "{protocol}://{host}/pitane/rest/TPV3/Tomp/",
            "variables": {
                "host": {
                    "default": "accept.pitane.dev",
                    "enum": [
                        "accept.pitane.dev",
                        "api.pitane.dev",
                        "kantoor.pitane.dev"
                    ]
                },
                "api": {
                    "default": "bd7f7507-7c49-475c-9281-867e4a35b244"
                },
                "output": {
                    "default": "json",
                    "enum": [
                        "json"
                    ]
                },
                "protocol": {
                    "default": "https",
                    "enum": [
                        "http",
                        "https"
                    ]
                },
                "port": {
                    "default": "443",
                    "enum": [
                        "443",
                        "80"
                    ]
                }
            }
        }
    ],
    "tags": [
        {
            "name": "articles",
            "description": "article / stock Endpoints"
        },
        {
            "name": "car",
            "description": "Car Endpoints"
        },
        {
            "name": "chiron",
            "description": "Chiron Endpoints"
        },
        {
            "name": "communication",
            "description": "Communication Endpoints"
        },
        {
            "name": "customer",
            "description": "Customer Endpoints"
        },
        {
            "name": "data/general",
            "description": "General Data Endpoints"
        },
        {
            "name": "data/tables",
            "description": "Tables Data Endpoints"
        },
        {
            "name": "data/financial",
            "description": "Financial Data Endpoints"
        },
        {
            "name": "data/documents",
            "description": "Documents Endpoints"
        },
        {
            "name": "device",
            "description": "Device Endpoints"
        },
        {
            "name": "driver",
            "description": "Driver Endpoints"
        },
        {
            "name": "marketing",
            "description": "Marketing Endpoints"
        },
        {
            "name": "paxx",
            "description": "Paxx Specified Endpoints"
        },
        {
            "name": "tomp",
            "description": "MaaS Provider Endpoints - TOMP Dragonfly"
        },
        {
            "name": "tomp/booking",
            "description": "MaaS Provider Endpoints - booking"
        },
        {
            "name": "tomp/booking [optional]",
            "description": "MaaS Provider Endpoints - optional booking"
        },
        {
            "name": "tomp/general",
            "description": "MaaS Provider Endpoints - operator"
        },
        {
            "name": "tomp/operator information",
            "description": "MaaS Provider Endpoints - operator"
        },
        {
            "name": "tomp/payment",
            "description": "MaaS Provider Endpoints - payment"
        },
        {
            "name": "tomp/planning",
            "description": "MaaS Provider Endpoints - planning"
        },
        {
            "name": "tomp/support",
            "description": "MaaS Provider Endpoints - support"
        },
        {
            "name": "tomp/trip execution",
            "description": "MaaS Provider Endpoints - trip execution"
        },
        {
            "name": "ns",
            "description": "NS Endpoints"
        },
        {
            "name": "planning",
            "description": "Planning Endpoints"
        },
        {
            "name": "routines",
            "description": "General Routines"
        },
        {
            "name": "routing",
            "description": "Routing Endpoints"
        },
        {
            "name": "security",
            "description": "Security Endpoints"
        },
        {
            "name": "service",
            "description": "Service Endpoints"
        },
        {
            "name": "trip",
            "description": "Trip Endpoints"
        },
        {
            "name": "gate12",
            "description": "Gate 12 Endpoints"
        }
    ],
    "security": [
        {
            "ApiKeyAuth": [
            ]
        }
    ],
    "paths": {
        "/pitaneEasyTravelDistance": {
            "get": {
                "tags": [
                    "easytravel"
                ],
                "description": "Request distance from A to B",
                "parameters": [
                    {
                        "name": "zip_from",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "5631"
                    },
                    {
                        "name": "zip_to",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "5657"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "document authentication - see definitions"
                    }
                }
            }
        },
        "/pitaneDeviceDocumentsPin": {
            "get": {
                "tags": [
                    "documents"
                ],
                "description": "Request document authorisation",
                "parameters": [
                    {
                        "name": "pincode",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "12345"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "document authentication - see definitions"
                    }
                }
            }
        },
        "/pitaneping": {
            "get": {
                "tags": [
                    "general"
                ],
                "description": "Check if server is still alive",
                "responses": {
                    "200": {
                        "description": "result - see table definitions"
                    }
                }
            }
        },
        "/pitaneChironSendReservation": {
            "post": {
                "tags": [
                    "chiron"
                ],
                "description": "send trip reservation to Chiron",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/chironreservation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneChironSendDeparture": {
            "post": {
                "tags": [
                    "chiron"
                ],
                "description": "send trip departure to Chiron",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/chirondeparture"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneChironSendArrival": {
            "post": {
                "tags": [
                    "chiron"
                ],
                "description": "send trip arrival to Chiron",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/chironarrival"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneChironCredentialTest": {
            "get": {
                "tags": [
                    "chiron"
                ],
                "description": "Send credentials to Chiron",
                "parameters": [
                    {
                        "name": "pitaneCustomer",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "FFFFFFFFFF"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "chiron status update - see definitions"
                    }
                }
            }
        },
        "/pitaneAuthenticate": {
            "get": {
                "tags": [
                    "general"
                ],
                "description": "Test Header Authentication",
                "responses": {
                    "200": {
                        "description": "authentication token - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "pitane-version",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "16.2.125"
                    },
                    {
                        "name": "pitane-username",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "IMEI8754265"
                    }
                ]
            }
        },
        "/pitaneCustomerTransportTypesRetrievebyID": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Retrieve transport types by customer",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": "customer transport records - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "AppVersion",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "1.102"
                    },
                    {
                        "name": "rei_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 5529
                    }
                ]
            }
        },
        "/pitaneCustomerTransportTypesRetrievebyGUID": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Retrieve transport types by customer",
                "responses": {
                    "200": {
                        "description": "customer transport records - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "AppVersion",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "1.102"
                    },
                    {
                        "name": "rei_guid",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "3EC35D65-6A06-42BE-87BE-539F58258A17"
                    }
                ]
            }
        },
        "/pitaneCustomerRetrieveVirtualPlanning": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Retrieve virtual planning by customer",
                "responses": {
                    "200": {
                        "description": "customer planning records - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "rei_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 8539
                    },
                    {
                        "name": "pla_datum",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-08-11"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ]
            }
        },
        "/pitaneCustomerAddressRetrievebyID": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Retrieve address by customer",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": "customer address records - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "rei_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 5529
                    }
                ]
            }
        },
        "/pitaneCustomerAddressRetrievebyGUID": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Retrieve address by customer",
                "responses": {
                    "200": {
                        "description": "customer address records - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "rei_guid",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "A383B8EE-795D-48C2-BAF8-E70577F2AE8E"
                    }
                ]
            }
        },
        "/pitaneCustomerDeleteByGUID": {
            "post": {
                "tags": [
                    "customer"
                ],
                "description": "Delete customer account",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rei_guid"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneContactsRetrievebyEmail": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Retrieve customers by contact",
                "responses": {
                    "200": {
                        "description": "customer records - see table definition"
                    }
                },
                "parameters": [
                    {
                        "name": "cpr_email",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "g.saey@censys.nl"
                    }
                ]
            }
        },
        "/pitaneCustomerRetrieveComplainsByGuid": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Retrieve complains by customer",
                "responses": {
                    "200": {
                        "description": "complains records - see table definition"
                    }
                },
                "parameters": [
                    {
                        "name": "rei_guid",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "db4b66d8-7e52-4982-8d1f-b243da60fe75"
                    }
                ]
            }
        },
        "/pitaneCustomerTripDateSetRetrievebyID": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Retrieve trips by customer (max. 999 records)",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": "customer trip records - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "rei_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 5529
                    },
                    {
                        "name": "rei_startdate",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-04-08T13:00:00"
                    },
                    {
                        "name": "rei_enddate",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2021-04-08T20:00:00"
                    },
                    {
                        "name": "pla_status",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "W"
                    },
                    {
                        "name": "pla_soortvervoer",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "P"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ]
            }
        },
        "/pitaneCustomerTripDateSetRetrievebyGUID": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Retrieve trips by customer (max. 999 records)",
                "responses": {
                    "200": {
                        "description": "customer trip records - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "rei_guid",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "FB19BA57-C796-4D39-9A58-54C281AF5F8B"
                    },
                    {
                        "name": "rei_startdate",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-04-08T13:00:00"
                    },
                    {
                        "name": "rei_enddate",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2021-04-08T20:00:00"
                    },
                    {
                        "name": "pla_status",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "W"
                    },
                    {
                        "name": "pla_soortvervoer",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "P"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ]
            }
        },
        "/pitaneCustomerRetrievebyZipcodeExtBirth": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Retrieve customer information by birthday",
                "responses": {
                    "200": {
                        "description": "customer information records - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "rei_gebdatum",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "1961-04-08"
                    },
                    {
                        "name": "adr_postcode",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "5611 ZB"
                    },
                    {
                        "name": "adr_huisnummer",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "130"
                    },
                    {
                        "name": "adr_toevoeging",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": ""
                    },
                    {
                        "name": "adr_check",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ]
            }
        },
        "/pitaneSendCustomerAbsent": {
            "post": {
                "tags": [
                    "customer"
                ],
                "description": "Set customer absent indicator",
                "deprecated": true,
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/absentrecord"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneSendCustomerAbsentByGUID": {
            "post": {
                "tags": [
                    "customer"
                ],
                "description": "Set customer absent indicator",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/absentrecordguid"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneCalculateTariffArrive": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "calculate trip tariff",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tariffarrive"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "tariff record - see table definition"
                    }
                }
            }
        },
        "/pitaneCalculateTariff": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "calculate trip tariff",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tariff"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "tariff record - see table definition"
                    }
                }
            }
        },
        "/pitaneSendTripInsert": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "Create or update trip record",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/trip"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneInsertTripCROW": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "Create CROW attribute record",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/crow"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneSendCustomerAbsentUpdate": {
            "post": {
                "tags": [
                    "customer"
                ],
                "description": "Update customer absent indicator",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/absentUpdaterecord"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneSendCustomerAbsentUpdateByGUID": {
            "post": {
                "tags": [
                    "customer"
                ],
                "description": "Update customer absent indicator",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/absentUpdaterecordguid"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneArticleOnlineRetrieve": {
            "get": {
                "tags": [
                    "articles"
                ],
                "description": "Article / stock list / extra costs",
                "responses": {
                    "200": {
                        "description": "articles dataset - see planning table definitions"
                    }
                }
            }
        },
        "/pitaneSendCustomerAbsentSummary": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Active absent indicators  (max. 999 records)",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "ond_rei_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 5529,
                        "description": "Customer ID"
                    }
                ]
            }
        },
        "/pitaneSendCustomerAbsentSummaryByGUID": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Active absent indicators  (max. 999 records)",
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "rei_guid",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "aebf3250-02c3-416c-8083-abebf0223b9f",
                        "description": "Customer ID"
                    }
                ]
            }
        },
        "/pitaneCollectTrips": {
            "get": {
                "tags": [
                    "planning"
                ],
                "description": "Collect trips for combination",
                "responses": {
                    "200": {
                        "description": "trips dataset - see planning table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "pla_datumtijd_from",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-07-15T15:00:00",
                        "description": "Start date/time collection."
                    },
                    {
                        "name": "pla_datumtijd_to",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-07-15T20:00:00",
                        "description": "End date/time collection."
                    },
                    {
                        "name": "pla_soortvervoer",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "P,C,L",
                        "description": "Travel kind collection"
                    },
                    {
                        "name": "pla_rolstoel",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "example": "false",
                        "description": "Wheelchair only"
                    },
                    {
                        "name": "pla_rolstoel_excluded",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "example": "false",
                        "description": "Wheelchair trips excluded"
                    },
                    {
                        "name": "pla_eigenaar_filtered",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "example": "false",
                        "description": "Wheelchair trips excluded"
                    },
                    {
                        "name": "pla_eigenaar",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "000",
                                "001",
                                "002",
                                "003",
                                "004",
                                "005",
                                "006",
                                "007",
                                "008",
                                "009",
                                "010",
                                "011",
                                "012",
                                "013"
                            ]
                        },
                        "example": "000",
                        "description": "Trip owner (optional)"
                    }
                ]
            }
        },
        "/pitaneCollectTripsByAPI": {
            "get": {
                "tags": [
                    "planning"
                ],
                "description": "Collect trips by API",
                "responses": {
                    "200": {
                        "description": "trips dataset - see planning table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "sub_token",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "DDAA-676DD-778DE-8778-DD",
                        "description": "Start date/time collection."
                    },
                    {
                        "name": "pla_datumtijd_from",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-07-15T15:00:00",
                        "description": "Start date/time collection."
                    },
                    {
                        "name": "pla_datumtijd_to",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-07-15T20:00:00",
                        "description": "End date/time collection."
                    },
                    {
                        "name": "pla_soortvervoer",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "P,C,L",
                        "description": "Travel kind collection"
                    },
                    {
                        "name": "pla_rolstoel",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "example": "false",
                        "description": "Wheelchair only"
                    },
                    {
                        "name": "pla_rolstoel_excluded",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "example": "false",
                        "description": "Wheelchair trips excluded"
                    },
                    {
                        "name": "pla_eigenaar_filtered",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "example": "false",
                        "description": "Wheelchair trips excluded"
                    },
                    {
                        "name": "pla_eigenaar",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "000",
                                "001",
                                "002",
                                "003",
                                "004",
                                "005",
                                "006",
                                "007",
                                "008",
                                "009",
                                "010",
                                "011",
                                "012",
                                "013"
                            ]
                        },
                        "example": "000",
                        "description": "Trip owner (optional)"
                    }
                ]
            }
        },
        "/pitaneUpdateTripCollection": {
            "post": {
                "tags": [
                    "planning"
                ],
                "description": "Trip collection of combination",
                "summary": "Create route",
                "requestBody": {
                    "description": "Trip collection records",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ArrayOfCombinedTrips"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneGetmetaInformation": {
            "get": {
                "tags": [
                    "routines"
                ],
                "description": "Convert text input",
                "responses": {
                    "200": {
                        "description": "report meta for table - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "tablename",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "planning",
                        "description": "Table name - see table definitions"
                    }
                ]
            }
        },
        "/pitaneHashConvert": {
            "post": {
                "tags": [
                    "routines"
                ],
                "description": "Convert text input",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/inputfield"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneUserResetPassword": {
            "post": {
                "tags": [
                    "security"
                ],
                "description": "Reset password",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/resetuserpassword"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneDriverResetPassword": {
            "post": {
                "tags": [
                    "security"
                ],
                "description": "Reset password",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/resetdriverpassword"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneCustomerResetPassword": {
            "post": {
                "tags": [
                    "security"
                ],
                "description": "Reset password",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/resetcustomerpassword"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitanedevicesendvoicerequest": {
            "post": {
                "tags": [
                    "communication"
                ],
                "description": "Request voice attention",
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "chf_email",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "g.saey@pitane.com",
                        "description": "Your personal access key for the SMS provider."
                    }
                ]
            }
        },
        "/pitaneDeviceSendPushMessageSMS": {
            "post": {
                "tags": [
                    "communication"
                ],
                "description": "Send SMS message",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/sms"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneMarketingTraject": {
            "post": {
                "tags": [
                    "marketing"
                ],
                "description": "Receive marketing information",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/marketing"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneAddressFromLatLong": {
            "post": {
                "tags": [
                    "routing"
                ],
                "description": "seek address from latitude / longitude",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/latlng"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneGetLatLongFromAddress": {
            "post": {
                "tags": [
                    "routing"
                ],
                "description": "seek latitude / longitude from address",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/address"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneRoutingDistancebyLatLong": {
            "post": {
                "tags": [
                    "routing"
                ],
                "description": "calculate distance by lat/lng",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/distancelatlng"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneRoutingRouteLegsbyLatLong": {
            "post": {
                "tags": [
                    "routing"
                ],
                "description": "generate route legs by lat/lng",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/distancelatlng"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneDeviceRequestDriverAccountbyGSM": {
            "get": {
                "tags": [
                    "device"
                ],
                "description": "Retrieve driver information by GSM",
                "responses": {
                    "200": {
                        "description": "driver information records - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "chf_mobiel",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "0632165489"
                    }
                ]
            }
        },
        "/pitanedevicesendrouteconfirmation": {
            "post": {
                "tags": [
                    "device"
                ],
                "description": "Confirm received route information",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/routeconfirmation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "status record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDeviceSendPlanningConfirmation": {
            "post": {
                "tags": [
                    "device"
                ],
                "description": "Confirm planning",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/planning"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "status record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDeviceSendDestinationbyPOI": {
            "post": {
                "tags": [
                    "device"
                ],
                "description": "Update trip destination by POI",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/poi"
                            }
                        }
                    }
                },
                "responses": {
                    "200": null,
                    "description": "status record - see table definitions"
                }
            }
        },
        "/pitaneCustomerResetPasswordByEmailToken": {
            "post": {
                "tags": [
                    "customer"
                ],
                "description": "Reset driver information by email token",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/passwordtoken"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "status record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDeviceResetPasswordByEmailToken": {
            "post": {
                "tags": [
                    "device"
                ],
                "description": "Reset driver information by email token",
                "deprecated": true,
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/passwordtoken"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "status record - see table definitions"
                    }
                }
            }
        },
        "/pitaneResetPasswordByEmailToken": {
            "post": {
                "tags": [
                    "security"
                ],
                "description": "Reset password information by email token",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/passwordtoken"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "status record - see table definitions"
                    }
                }
            }
        },
        "/pitanersendloginnamebyemail": {
            "post": {
                "tags": [
                    "Gate12"
                ],
                "description": "Send GATE 12 login information by email",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customeremail"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "status record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDeviceSendServiceStart": {
            "post": {
                "tags": [
                    "device"
                ],
                "description": "Start regular driver service",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/servicestart"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "status record - see table definition"
                    }
                }
            }
        },
        "/pitaneNSSendServiceStartByNSD": {
            "post": {
                "tags": [
                    "ns"
                ],
                "description": "Start driver service NS bus",
                "responses": {
                    "200": {
                        "description": "status NS bus service - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "lsn_wag_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123456"
                    },
                    {
                        "name": "lsn_chf_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123456"
                    },
                    {
                        "name": "lsn_kilometerstand_aanvang",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123456"
                    },
                    {
                        "name": "latitude",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "51.552422"
                    },
                    {
                        "name": "longitude",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "5.542853"
                    },
                    {
                        "name": "lsn_nsp_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "0"
                    },
                    {
                        "name": "chf_subcentrale",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "0"
                    },
                    {
                        "name": "lsn_nsd_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "0"
                    },
                    {
                        "name": "dev_imei",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "1234543SD"
                    },
                    {
                        "name": "pla_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "15422"
                    }
                ]
            }
        },
        "/pitaneNSSendServiceStart": {
            "post": {
                "tags": [
                    "ns"
                ],
                "description": "Start driver service NS bus",
                "responses": {
                    "200": {
                        "description": "status NS bus service - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "lsn_wag_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123456"
                    },
                    {
                        "name": "lsn_chf_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123456"
                    },
                    {
                        "name": "lsn_kilometerstand_aanvang",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123456"
                    },
                    {
                        "name": "latitude",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "51.552422"
                    },
                    {
                        "name": "longitude",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "5.542853"
                    },
                    {
                        "name": "lsn_nsp_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "0"
                    },
                    {
                        "name": "chf_subcentrale",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "0"
                    },
                    {
                        "name": "lsn_nsd_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "0"
                    },
                    {
                        "name": "dev_imei",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "1234543SD"
                    },
                    {
                        "name": "pla_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "223344"
                    }
                ]
            }
        },
        "/pitaneNSSendServiceStop": {
            "post": {
                "tags": [
                    "ns"
                ],
                "description": "Stop driver NS bus service",
                "responses": {
                    "200": {
                        "description": "stop service - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "lsn_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123456"
                    },
                    {
                        "name": "lsn_kilometerstand_einde",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123456"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "51.552422"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "5.542853"
                    },
                    {
                        "name": "dev_imei",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "1234543SD"
                    }
                ]
            }
        },
        "/pitaneDeviceSendServiceStop": {
            "post": {
                "tags": [
                    "device"
                ],
                "description": "Stop regular driver service",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/servicestop"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "status record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDeviceSendTripConfirmation": {
            "post": {
                "tags": [
                    "device"
                ],
                "description": "Confirm trip",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": "conform received trip - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "pla_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123456"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "51.552422"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "5.542853"
                    },
                    {
                        "name": "speed",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "10"
                    },
                    {
                        "name": "dev_imei",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "1234543SD"
                    }
                ]
            }
        },
        "/pitaneSendTripCancelbyGUID": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "cancel pending or waiting reservation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tripcancel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneSendTripConfirmation": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "update trip confirmation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tripconfirmation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneDeviceSendTripNoShow": {
            "post": {
                "tags": [
                    "device"
                ],
                "description": "Flag trip noshow customer",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": "noshow trip - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "pla_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123456"
                    },
                    {
                        "name": "pla_loosreden",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "customer not found"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "51.552422"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "5.542853"
                    },
                    {
                        "name": "speed",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "10"
                    },
                    {
                        "name": "dev_imei",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "1234543SD"
                    }
                ]
            }
        },
        "/pitaneSendTripTicket": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "Mail trip ticket",
                "deprecated": true,
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tripticket"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "status record - see table definitions"
                    }
                }
            }
        },
        "/pitaneSendTripTicketByGUID": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "Mail trip ticket",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tripticketguid"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "status record - see table definitions"
                    }
                }
            }
        },
        "/pitaneSendTripCost": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "Send trip extra cost",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/costplanning"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "status record - see table definition"
                    }
                }
            }
        },
        "/pitaneSendTripRating": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "Send trip rating 1-5",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rating"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "status record - see table definitions"
                    }
                }
            }
        },
        "/pitaneSendCustomerRating": {
            "get": {
                "tags": [
                    "trip"
                ],
                "description": "Send trip rating 1-5",
                "parameters": [
                    {
                        "name": "pla_guid",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "24A2B218-B258-4A39-BA69-EE02192F81CD"
                    },
                    {
                        "name": "pla_punten",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 3
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status record - see table definitions"
                    }
                }
            }
        },
        "/pitaneSendTripCostDeleted": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "Delete extra trip cost",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/costid"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "status record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDeviceSendTripCallCustomer": {
            "post": {
                "tags": [
                    "device"
                ],
                "description": "Customer has been called status",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/planning"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "status record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDeviceSendChatMessage": {
            "post": {
                "tags": [
                    "device"
                ],
                "description": "Send chat message",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/chatmessage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "status record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDeviceSendPauseStart": {
            "post": {
                "tags": [
                    "device"
                ],
                "description": "Start regular driver service",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/pauserecord"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "status record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDeviceSendPauseStop": {
            "post": {
                "tags": [
                    "device"
                ],
                "description": "Stop regular driver service",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/pauserecord"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "status record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDeviceSendDocuments": {
            "post": {
                "tags": [
                    "documents"
                ],
                "description": "Upload document",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/document"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "status record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDeviceRequestDocuments": {
            "get": {
                "tags": [
                    "documents"
                ],
                "description": "Request digital documents",
                "responses": {
                    "200": {
                        "description": "document data - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "doc_sleutel",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123456"
                    },
                    {
                        "name": "doc_type",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ]
            }
        },
        "/pitaneDeviceRequestPOI": {
            "get": {
                "tags": [
                    "device"
                ],
                "description": "Request available POI codes",
                "responses": {
                    "200": {
                        "description": "POI record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDeviceRequestTaxiZones": {
            "get": {
                "tags": [
                    "device"
                ],
                "description": "Request available taxi zones",
                "responses": {
                    "200": {
                        "description": "taxizone record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDeviceRequestDocument": {
            "get": {
                "tags": [
                    "documents"
                ],
                "description": "Request digital document",
                "responses": {
                    "200": {
                        "description": "document data - see table definitions"
                    }
                },
                "parameters": [
                    {
                        "name": "doc_api",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "df123-b7e45-fe34-dea8"
                    }
                ]
            }
        },
        "/pitaneDeviceSendGPSbyLicenseplate": {
            "post": {
                "tags": [
                    "device"
                ],
                "description": "Send GPS update device",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/gpsbylicense"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "status record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDataCarGroup": {
            "get": {
                "tags": [
                    "data/tables"
                ],
                "description": "Retrieve car types",
                "responses": {
                    "200": {
                        "description": "car type record - see table definitions",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pitaneRetrieveCoverage": {
            "get": {
                "tags": [
                    "data/tables"
                ],
                "description": "Retrieve companies by area",
                "parameters": [
                    {
                        "name": "bdl_latitude",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "51.5708900"
                    },
                    {
                        "name": "bdl_longitude",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "5.3719800"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company information records - see table definitions"
                    }
                }
            }
        },
        "/pitaneCarRetrieveByDriver": {
            "get": {
                "tags": [
                    "car"
                ],
                "description": "Retrieve car information by driver",
                "parameters": [
                    {
                        "name": "chf_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1234"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "car information record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDevicePRDS": {
            "get": {
                "tags": [
                    "device"
                ],
                "description": "Request available PRDS information. PRDS is a system that transmits useful information for the driver about his service.",
                "parameters": [
                    {
                        "name": "prds_lsn_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "93281"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PRDS information record - see table definitions"
                    }
                }
            }
        },
        "/pitaneCarRetrieveLicensePlates": {
            "get": {
                "tags": [
                    "car"
                ],
                "description": "Retrieve car information by TPL",
                "responses": {
                    "200": {
                        "description": "car information records - see table definitions"
                    }
                }
            }
        },
        "/pitaneRetrieveFleetTariff": {
            "get": {
                "tags": [
                    "car"
                ],
                "description": "Retrieve fleet tariff information",
                "responses": {
                    "200": {
                        "description": "car information record - see table definitions"
                    }
                }
            }
        },
        "/pitaneFleetRetrievebyAPI": {
            "get": {
                "tags": [
                    "car"
                ],
                "description": "Retrieve GPS fleet information by fleet token",
                "parameters": [
                    {
                        "name": "sub_token",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "bd7d7525-7c56-5675=678ea35b244"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "car information record - see table definitions"
                    }
                }
            }
        },
        "/pitaneCarRetrieveLicensePlatesSub": {
            "get": {
                "tags": [
                    "car"
                ],
                "description": "Retrieve car information by subcentrale",
                "parameters": [
                    {
                        "name": "wag_subcentrale",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "122"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "car information record - see table definitions"
                    }
                }
            }
        },
        "/pitaneCarRetrieveLicenseData": {
            "get": {
                "tags": [
                    "car"
                ],
                "description": "Retrieve car information from Rijksdienst voor Wegverkeer",
                "parameters": [
                    {
                        "name": "wag_kenteken",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "GS360X"
                    },
                    {
                        "name": "access_key",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "41917dac8cbbd6a9c966ed65684f3fd99f0cd6b0e2ed7d351328605d184bd668"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "car RDW information record - see table definitions"
                    }
                }
            }
        },
        "/pitaneCarRetrieveBCTData": {
            "get": {
                "tags": [
                    "car"
                ],
                "description": "Retrieve BCT information from Rijksdienst voor Wegverkeer",
                "parameters": [
                    {
                        "name": "wag_kenteken",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "GS360X"
                    },
                    {
                        "name": "access_key",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "41917dac8cbbd6a9c966ed65684f3fd99f0cd6b0e2ed7d351328605d184bd668"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "car BCT information record - see table definitions"
                    }
                }
            }
        },
        "/pitaneCarRetrieveByTPL": {
            "get": {
                "tags": [
                    "car"
                ],
                "description": "Retrieve car information by TPL",
                "parameters": [
                    {
                        "name": "wag_pitanelink",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "9876"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "car information record - see table definitions"
                    }
                }
            }
        },
        "/pitaneCarRetrieveByNumber": {
            "get": {
                "tags": [
                    "car"
                ],
                "description": "Retrieve car information by number",
                "parameters": [
                    {
                        "name": "wag_taxis",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "9876"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "car information record - see table definitions"
                    }
                }
            }
        },
        "/pitaneCarRetrieveByLicense": {
            "get": {
                "tags": [
                    "car"
                ],
                "description": "Retrieve car information by license",
                "parameters": [
                    {
                        "name": "wag_imei",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "67-AB-625"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "car information record - see table definitions"
                    }
                }
            }
        },
        "/pitaneCarRetrieveByImei": {
            "get": {
                "tags": [
                    "car"
                ],
                "description": "Retrieve car information by imei",
                "parameters": [
                    {
                        "name": "wag_imei",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "123456789"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "car information record - see table definitions"
                    }
                }
            }
        },
        "/pitaneCarRetrieveByID": {
            "get": {
                "tags": [
                    "car"
                ],
                "description": "Retrieve car information by id",
                "parameters": [
                    {
                        "name": "wag_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1234"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "car information record - see table definitions"
                    }
                }
            }
        },
        "/pitaneCarSetDelay": {
            "post": {
                "tags": [
                    "car"
                ],
                "description": "Set car delay",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/cardelay"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneDevicePRDSConfirm": {
            "post": {
                "tags": [
                    "device"
                ],
                "description": "Confirm received PRDS record.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/prdsconfirmation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneSendTripGPSUpdate": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "Change trip GPS status",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tripstatus"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneCarSetStatus": {
            "post": {
                "tags": [
                    "car"
                ],
                "description": "Change car status",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/carstatus"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneDriverSetStatus": {
            "post": {
                "tags": [
                    "driver"
                ],
                "description": "Change driver status",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/driverstatus"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneDriverNotifyUpdate": {
            "post": {
                "tags": [
                    "driver"
                ],
                "description": "Change notification status",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/drivernotifystatus"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneDeviceSetStatus": {
            "post": {
                "tags": [
                    "device"
                ],
                "description": "Change device status",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/devicestatus"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneDeviceSendZoneUpdate": {
            "post": {
                "tags": [
                    "device"
                ],
                "description": "Update taxi zone or sector",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/devicezonestatus"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneCarSetBatteryLevel": {
            "post": {
                "tags": [
                    "device"
                ],
                "description": "Update taxi zone or sector",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/batterylevel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneNSRetrieveShiftbyProjectNumber": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve NS project information by project number",
                "parameters": [
                    {
                        "name": "nsp_nummer",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "7843195"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NS project record - see table definitions"
                    }
                }
            }
        },
        "/pitaneNSRetrieveNetexByTrip": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve Netex information by trip id",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "pla_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "5020"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Netex records - see table definition"
                    }
                }
            }
        },
        "/pitaneNSRetrieveNetexByTripGUID": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve Netex information by trip guid",
                "parameters": [
                    {
                        "name": "pla_guid",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "15365F07-B81C-4469-887B-58AEA1704FD4"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Netex records - see table definition"
                    }
                }
            }
        },
        "/pitaneNSRetrieveNetexByID": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve Netex information by Netex id",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "net_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "5020"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Netex record - see table definition"
                    }
                }
            }
        },
        "/pitaneNSRetrieveNetexByGUID": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve Netex information by Netex GUID",
                "parameters": [
                    {
                        "name": "net_guid",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "A3590064-B1DE-464C-8754-508C92D8B7CE"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Netex record - see table definition"
                    }
                }
            }
        },
        "/pitaneNSRetrieveTripsByNSD": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve trips by NS service id",
                "parameters": [
                    {
                        "name": "nsd_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "5"
                    },
                    {
                        "name": "pla_subcentrale",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "18"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "trip records - see table definitions"
                    }
                }
            }
        },
        "/pitaneNSRetrieveTripsByNSP": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve trips by NS project id",
                "parameters": [
                    {
                        "name": "nsp_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "trip records - see table definitions"
                    }
                }
            }
        },
        "/pitaneNSRetrieveShiftbyProject": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve NS shift information by project number",
                "parameters": [
                    {
                        "name": "nsp_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1234"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NS project shift infromation record - see table definitions"
                    }
                }
            }
        },
        "/pitaneNSRetrieveProjects": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve NS project(s) information by project number",
                "parameters": [
                    {
                        "name": "nsp_from",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-07-15T15:00:00"
                    },
                    {
                        "name": "nsp_to",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-07-15T22:00:00"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NS project record - see table definitions"
                    }
                }
            }
        },
        "/pitaneNSRetrieveBusStationsByID": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve NS busstations information by ID",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "bha_id_from",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    },
                    {
                        "name": "bha_id_to",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "999999"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NS busstations records - see table definitions"
                    }
                }
            }
        },
        "/pitaneNSRetrieveBusStationsByGUID": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve NS busstations information by GUID",
                "parameters": [
                    {
                        "name": "bha_id_from_guid",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "361000E9-0055-4C73-88CD-65FD3991CBEB"
                    },
                    {
                        "name": "bha_id_to_guid",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "361000E9-0055-4C73-88CD-65FD3991CBEB"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NS busstations records - see table definitions"
                    }
                }
            }
        },
        "/pitaneNSRetrieveBusStationsByStationAlias": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve NS busstations information by station alias",
                "parameters": [
                    {
                        "name": "nss_code_from",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "EHV196"
                    },
                    {
                        "name": "nss_code_to",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "EHV196"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NS station records - see table definitions"
                    }
                }
            }
        },
        "/pitaneNSRetrieveProjectsByID": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve NS project(s) information by project id",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "nsp_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 12345
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NS project record - see table definitions"
                    }
                }
            }
        },
        "/pitaneNSRetrieveProjectsByGUID": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve NS project(s) information by project guid",
                "parameters": [
                    {
                        "name": "nsp_guid",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "81DAE68D-8C0B-4417-AB00-2CEF54BD46A8"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NS project record - see table definitions"
                    }
                }
            }
        },
        "/pitaneNSRetrieveProjectsByDate": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve NS project(s) information by project startdate",
                "parameters": [
                    {
                        "name": "nsp_startdatum",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-07-15T00:00:00"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NS project record - see table definitions"
                    }
                }
            }
        },
        "/pitaneNSRetrieveProjectsBySubcentrale": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve NS project(s) information by project subcentrale",
                "parameters": [
                    {
                        "name": "nsd_startdatum",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-07-15T00:00:00"
                    },
                    {
                        "name": "chf_subcentrale",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 12345
                    },
                    {
                        "name": "nsp_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 165
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NS project record - see table definitions"
                    }
                }
            }
        },
        "/pitaneNSRetrieveProjectTripsBySubcentrale": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve NS project trips information by project subcentrale",
                "parameters": [
                    {
                        "name": "nsp_startdatum",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-07-15T00:00:00"
                    },
                    {
                        "name": "nsp_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 12345
                    },
                    {
                        "name": "chf_subcentrale",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 12345
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NS project / trips record - see table definitions"
                    }
                }
            }
        },
        "/pitaneNSRetrieveBusStatus": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve NS bus status information",
                "responses": {
                    "200": {
                        "description": "NS bus status records - see table definitions"
                    }
                }
            }
        },
        "/pitaneNSRetrieveStationsByAlias": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve NS stations information by project number",
                "parameters": [
                    {
                        "name": "nss_alias_from",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": ""
                    },
                    {
                        "name": "nss_alias_to",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "ZZZZZZZZ"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NS station record - see table definitions"
                    }
                }
            }
        },
        "/pitaneNSRetrieveStationsInNeighborhood": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve NS stations in GPS neighborhood",
                "parameters": [
                    {
                        "name": "latitude",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "51.44083"
                    },
                    {
                        "name": "longitude",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "5.47778"
                    },
                    {
                        "name": "limit",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "10"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NS neighborhood station record - see table definitions"
                    }
                }
            }
        },
        "/pitaneNSRetrieveShiftsbySubcontractor": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve NS shifts by subconcrator information by project number",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "nsp_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123"
                    },
                    {
                        "name": "ndr_sub_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NS shift subcentractor record - see table definitions"
                    }
                }
            }
        },
        "/pitaneNSRetrieveShiftsbySubcontractorGUID": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Retrieve NS shifts by subconcrator information by project guid",
                "parameters": [
                    {
                        "name": "nsp_guid",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "88453840-1436-413F-860C-2A62A59DEC62"
                    },
                    {
                        "name": "ndr_sub_guid",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "68151B39-D9F4-4078-A728-28C21BEC0B6A"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NS shift subcentractor record - see table definitions"
                    }
                }
            }
        },
        "/pitaneNSSendServiceSummary": {
            "get": {
                "tags": [
                    "ns"
                ],
                "description": "Service summary",
                "parameters": [
                    {
                        "name": "lsn_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result records - see definitions"
                    }
                }
            }
        },
        "/pitaneDriverSendServiceSummary": {
            "get": {
                "tags": [
                    "driver"
                ],
                "description": "Service summary",
                "parameters": [
                    {
                        "name": "lsn_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result records - see definitions"
                    }
                }
            }
        },
        "/pitaneNSSendStationDeparture": {
            "post": {
                "tags": [
                    "ns"
                ],
                "description": "NS station departure",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "pla_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123"
                    },
                    {
                        "name": "lsn_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123"
                    },
                    {
                        "name": "pla_odo_start",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "0"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "51.552422"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "5.542853"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result records - see definitions"
                    }
                }
            }
        },
        "/pitaneNSSendStationDepartureBGUID": {
            "post": {
                "tags": [
                    "ns"
                ],
                "description": "NS station departure",
                "parameters": [
                    {
                        "name": "pla_guid",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "68151B39-D9F4-4078-A728-28C21BEC0B6A"
                    },
                    {
                        "name": "lsn_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123"
                    },
                    {
                        "name": "pla_odo_start",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "0"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "51.552422"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "5.542853"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result records - see definitions"
                    }
                }
            }
        },
        "/pitaneNSSendStationArrival": {
            "post": {
                "tags": [
                    "ns"
                ],
                "description": "NS station departure",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "pla_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123"
                    },
                    {
                        "name": "pla_tijdstip_vrijmelden",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-10-19T12:30:00"
                    },
                    {
                        "name": "pla_odo_stop",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "0"
                    },
                    {
                        "name": "lsn_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "51.552422"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "5.542853"
                    },
                    {
                        "name": "pla_ns_status",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "D"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result records - see definitions"
                    }
                }
            }
        },
        "/pitaneNSSendStationArrivalByGUID": {
            "post": {
                "tags": [
                    "ns"
                ],
                "description": "NS station departure",
                "parameters": [
                    {
                        "name": "pla_guid",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "68151B39-D9F4-4078-A728-28C21BEC0B6A"
                    },
                    {
                        "name": "pla_tijdstip_vrijmelden",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-10-19T12:30:00"
                    },
                    {
                        "name": "pla_odo_stop",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "0"
                    },
                    {
                        "name": "lsn_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "51.552422"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "5.542853"
                    },
                    {
                        "name": "pla_ns_status",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "D"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result records - see definitions"
                    }
                }
            }
        },
        "/pitaneNSSendStationNoShow": {
            "post": {
                "tags": [
                    "ns"
                ],
                "description": "NS station no show registration",
                "parameters": [
                    {
                        "name": "pla_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123"
                    },
                    {
                        "name": "pla_odo_start",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "0"
                    },
                    {
                        "name": "lsn_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "51.552422"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "5.542853"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result records - see definitions"
                    }
                }
            }
        },
        "/pitaneNSSendStandby": {
            "post": {
                "tags": [
                    "ns"
                ],
                "description": "Set vehicle standby for NS project",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "wag_id",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123"
                    },
                    {
                        "name": "latitude",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "51.552422"
                    },
                    {
                        "name": "longitude",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "5.542853"
                    },
                    {
                        "name": "wag_standby_expiration",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-07-22T14:00:00"
                    },
                    {
                        "name": "nss_code",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "EHV196"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stand-by status update - see definitions"
                    }
                }
            }
        },
        "/pitaneNSSendStandbyByGUID": {
            "post": {
                "tags": [
                    "ns"
                ],
                "description": "Set vehicle standby for NS project",
                "parameters": [
                    {
                        "name": "wag_guid",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "AC8571AF-ACBA-4A2D-A6AE-6EAFC1488AB6"
                    },
                    {
                        "name": "latitude",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "51.552422"
                    },
                    {
                        "name": "longitude",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "example": "5.542853"
                    },
                    {
                        "name": "wag_standby_expiration",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-07-22T14:00:00"
                    },
                    {
                        "name": "nss_code",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "EHV196"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stand-by status update - see definitions"
                    }
                }
            }
        },
        "/pitaneRouteStatusRetrievebyID": {
            "get": {
                "tags": [
                    "trip"
                ],
                "description": "Retrieve route status information by routenumber",
                "parameters": [
                    {
                        "name": "pla_route",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "43195"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "trip records - see table definitions"
                    }
                }
            }
        },
        "/pitaneRouteRetrievebyID": {
            "get": {
                "tags": [
                    "trip"
                ],
                "description": "Retrieve route information by routenumber",
                "parameters": [
                    {
                        "name": "pla_route",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "43195"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "trip record - see table definitions"
                    }
                }
            }
        },
        "/pitaneTripRetrieveCostByID": {
            "get": {
                "tags": [
                    "trip"
                ],
                "description": "Retrieve extra cost information by trip",
                "parameters": [
                    {
                        "name": "pla_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "322223"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "trip cost record - see table definitions"
                    }
                }
            }
        },
        "/pitaneTripRetrievebyExternalID": {
            "get": {
                "tags": [
                    "trip"
                ],
                "description": "Retrieve trip information by external number",
                "parameters": [
                    {
                        "name": "pla_extern_ritnummer",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "3323195"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "trip record - see table definitions"
                    }
                }
            }
        },
        "/payment/journal-entry": {
            "get": {
                "tags": [
                    "tomp/payment"
                ],
                "description": "Returns all the journal entries that should be paid per leg",
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "description": "list of the languages/localizations the user would like to see",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "nl, de;q=0.7"
                    },
                    {
                        "name": "Api",
                        "description": "personal API key",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "56faf998-617c-4edd-8f72-8dc9c3357fb9"
                    },
                    {
                        "name": "Api-Version",
                        "description": "Version of the API",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "nl, de;q=0.7"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "start of the selection",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "end of the selection",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/journalState"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "type of booking line (e.g. fare, addition costs, fines, ...)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DAMAGE",
                                "LOSS",
                                "STOLEN",
                                "EXTRA_USAGE",
                                "REFUND",
                                "FINE",
                                "OTHER_ASSET_USED",
                                "CREDIT",
                                "VOUCHER",
                                "DEPOSIT",
                                "OTHER"
                            ]
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "start of the selection",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 0
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "count of the selection",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "tomp journal entry"
                    },
                    "401": {
                        "description": "although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response."
                    },
                    "404": {
                        "description": "the requested resources does not exist or the requester is not authorized to see it or know it exists."
                    },
                    "410": {
                        "description": "the requested resource is no longer available. This is permanent."
                    }
                }
            }
        },
        "/bookings": {
            "post": {
                "tags": [
                    "tomp/booking"
                ],
                "description": "This section contains functionality to book a leg (part of a trip) for one asset (or assetType), including the non-happy paths (cancel, expire etc).",
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "description": "list of the languages/localizations the user would like to see",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "nl, de;q=0.7"
                    },
                    {
                        "name": "Api",
                        "description": "personal API key",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "56faf998-617c-4edd-8f72-8dc9c3357fb9"
                    },
                    {
                        "name": "Api-Version",
                        "description": "Version of the API",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "nl, de;q=0.7"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/bookingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "tomp booking"
                    },
                    "401": {
                        "description": "although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response."
                    },
                    "404": {
                        "description": "the requested resources does not exist or the requester is not authorized to see it or know it exists."
                    },
                    "410": {
                        "description": "the requested resource is no longer available. This is permanent."
                    }
                }
            }
        },
        "/plannings": {
            "post": {
                "description": "Returns plannings for the given travel plan.",
                "tags": [
                    "tomp/planning"
                ],
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "description": "list of the languages/localizations the user would like to see",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "nl, de;q=0.7"
                    },
                    {
                        "name": "Api",
                        "description": "personal API key",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "56faf998-617c-4edd-8f72-8dc9c3357fb9"
                    },
                    {
                        "name": "Api-Version",
                        "description": "Version of the API",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "nl, de;q=0.7"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/planningRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Available transport methods matching the given query parameters. If no transport methods are available, an empty array is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/planning"
                                }
                            }
                        },
                        "headers": {
                            "Content-Language": {
                                "description": "The language/localization of user-facing content",
                                "example": "nl",
                                "schema": {
                                    "type": "string",
                                    "format": "One IETF BCP 47 (RFC 5646) language tag"
                                },
                                "required": true
                            }
                        }
                    },
                    "401": {
                        "description": "although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response."
                    },
                    "404": {
                        "description": "the requested resources does not exist or the requester is not authorized to see it or know it exists."
                    },
                    "410": {
                        "description": "the requested resource is no longer available. This is permanent."
                    }
                }
            }
        },
        "/bookings/{id}": {
            "get": {
                "tags": [
                    "tomp/booking"
                ],
                "description": "returns the booking by ID",
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "description": "list of the languages/localizations the user would like to see",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "nl, de;q=0.7"
                    },
                    {
                        "name": "Api",
                        "description": "personal API key",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "56faf998-617c-4edd-8f72-8dc9c3357fb9"
                    },
                    {
                        "name": "Api-Version",
                        "description": "Version of the API",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "nl, de;q=0.7"
                    },
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "example": "C6C7AFB9-B704-4590-BC27-D932C3670D4E"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "tomp booking",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/booking"
                                }
                            }
                        },
                        "headers": {
                            "Content-Language": {
                                "description": "The language/localization of user-facing content",
                                "example": "nl",
                                "schema": {
                                    "type": "string",
                                    "format": "One IETF BCP 47 (RFC 5646) language tag"
                                },
                                "required": true
                            }
                        }
                    },
                    "401": {
                        "description": "although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response."
                    },
                    "404": {
                        "description": "the requested resources does not exist or the requester is not authorized to see it or know it exists."
                    },
                    "410": {
                        "description": "the requested resource is no longer available. This is permanent."
                    }
                }
            },
            "put": {
                "description": "Optional - This endpoint should be used to adjust the parameters of the booking. Changes not acceptable to the TO should return 400. If a booking is started and can no longer be adjusted the TO should return 403. The state of the booking should **never** be adjusted using this method. Use /bookings/{id}/events for that. See also (7.2) in the flow diagram - booking.",
                "tags": [
                    "tomp/booking [optional]"
                ],
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "description": "list of the languages/localizations the user would like to see",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "nl, de;q=0.7"
                    },
                    {
                        "name": "Api",
                        "description": "personal API key",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "56faf998-617c-4edd-8f72-8dc9c3357fb9"
                    },
                    {
                        "name": "Api-Version",
                        "description": "Version of the API",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "nl, de;q=0.7"
                    },
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "example": "C6C7AFB9-B704-4590-BC27-D932C3670D4E"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/booking"
                            }
                        }
                    },
                    "description": "changed booking",
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "no content"
                    },
                    "401": {
                        "description": "although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response."
                    },
                    "404": {
                        "description": "the requested resources does not exist or the requester is not authorized to see it or know it exists."
                    },
                    "410": {
                        "description": "the requested resource is no longer available. This is permanent."
                    }
                }
            },
            "delete": {
                "description": "Optional - subscribe to a specific booking (=leg & (type of) asset). This is an optional endpoint",
                "tags": [
                    "tomp/booking [optional]"
                ],
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "description": "list of the languages/localizations the user would like to see",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "nl, de;q=0.7"
                    },
                    {
                        "name": "Api",
                        "description": "personal API key",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "56faf998-617c-4edd-8f72-8dc9c3357fb9"
                    },
                    {
                        "name": "Api-Version",
                        "description": "Version of the API",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "nl, de;q=0.7"
                    },
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "example": "C6C7AFB9-B704-4590-BC27-D932C3670D4E"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    },
                    "401": {
                        "description": "although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response."
                    },
                    "404": {
                        "description": "the requested resources does not exist or the requester is not authorized to see it or know it exists."
                    },
                    "410": {
                        "description": "the requested resource is no longer available. This is permanent."
                    }
                }
            }
        },
        "/bookings/{id}/events": {
            "post": {
                "tags": [
                    "tomp/booking"
                ],
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "description": "list of the languages/localizations the user would like to see",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "nl, de;q=0.7"
                    },
                    {
                        "name": "Api",
                        "description": "personal API key",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "56faf998-617c-4edd-8f72-8dc9c3357fb9"
                    },
                    {
                        "name": "Api-Version",
                        "description": "Version of the API",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "nl, de;q=0.7"
                    },
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "example": "C6C7AFB9-B704-4590-BC27-D932C3670D4E"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/bookingOperation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "tomp booking"
                    },
                    "401": {
                        "description": "although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response."
                    },
                    "404": {
                        "description": "the requested resources does not exist or the requester is not authorized to see it or know it exists."
                    },
                    "410": {
                        "description": "the requested resource is no longer available. This is permanent."
                    }
                }
            }
        },
        "/payment/{id}/claim-extra-costs": {
            "post": {
                "tags": [
                    "tomp/payment"
                ],
                "description": "extra costs that the TO has to charge to the MP or vice versa.",
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "description": "list of the languages/localizations the user would like to see",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "nl, de;q=0.7"
                    },
                    {
                        "name": "Api",
                        "description": "personal API key",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "56faf998-617c-4edd-8f72-8dc9c3357fb9"
                    },
                    {
                        "name": "Api-Version",
                        "description": "Version of the API",
                        "required": true,
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "example": "nl, de;q=0.7"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Booking identifier",
                        "example": "C6C7AFB9-B704-4590-BC27-D932C3670D4E",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/extraCosts"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "tomp booking"
                    },
                    "401": {
                        "description": "although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response."
                    },
                    "404": {
                        "description": "the requested resources does not exist or the requester is not authorized to see it or know it exists."
                    },
                    "410": {
                        "description": "the requested resource is no longer available. This is permanent."
                    }
                }
            }
        },
        "/plannings/booking-intent": {
            "get": {
                "tags": [
                    "tomp/planning"
                ],
                "description": "Retrieve available assets (e.g. cars or taxis's)",
                "parameters": [
                    {
                        "name": "from_lat",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "52.253279"
                    },
                    {
                        "name": "from_lng",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "6.169639"
                    },
                    {
                        "name": "to_lat",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "52.253279"
                    },
                    {
                        "name": "to_lng",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "6.169639"
                    },
                    {
                        "name": "startTime",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-06-24T07:10:00"
                    },
                    {
                        "name": "endTime",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-06-24T07:20:00"
                    },
                    {
                        "name": "travellers",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "asset record - see table definitions"
                    }
                }
            }
        },
        "/pitaneTripFare": {
            "get": {
                "tags": [
                    "trip"
                ],
                "description": "Retrieve trip fare information by ID",
                "parameters": [
                    {
                        "name": "pla_guid",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "C6C7AFB9-B704-4590-BC27-D932C3670D4E"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "trip record - see table definitions"
                    }
                }
            }
        },
        "/pitaneTripRetrieveByID": {
            "get": {
                "tags": [
                    "trip"
                ],
                "description": "Retrieve trip information by number",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "pla_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "3443195"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "trip record - see table definitions"
                    }
                }
            }
        },
        "/pitaneTripRetrieveByCustomerGUID": {
            "get": {
                "tags": [
                    "trip"
                ],
                "description": "Retrieve trips information by customer guid",
                "parameters": [
                    {
                        "name": "rei_guid",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "A6BE15CE-EC6C-462F-9FCD-98A862F42E1A"
                    },
                    {
                        "name": "pla_datum_from",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-06-24"
                    },
                    {
                        "name": "pla_datum_to",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-06-24"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "trip record - see table definitions"
                    }
                }
            }
        },
        "/pitaneTripWMO_gate12ByGUID": {
            "get": {
                "tags": [
                    "trip"
                ],
                "description": "Update trip price information by trip GUID",
                "parameters": [
                    {
                        "name": "pla_guid",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "A6BE15CE-EC6C-462F-9FCD-98A862F42E1A"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "WMO tariff update - see table definitions"
                    }
                }
            }
        },
        "/pitaneTripRetrieveByGUID": {
            "get": {
                "tags": [
                    "trip"
                ],
                "description": "Retrieve trip information by trip guid",
                "parameters": [
                    {
                        "name": "pla_guid",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "A6BE15CE-EC6C-462F-9FCD-98A862F42E1A"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "trip record - see table definitions"
                    }
                }
            }
        },
        "/pitaneTripStatusRetrieveByID": {
            "get": {
                "tags": [
                    "trip"
                ],
                "description": "Retrieve trip status information by number",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "pla_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "97312"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "trip status record - see table definitions"
                    }
                }
            }
        },
        "/pitaneTripStatusRetrieveByGUID": {
            "get": {
                "tags": [
                    "trip"
                ],
                "description": "Retrieve trip status information by GUID",
                "parameters": [
                    {
                        "name": "pla_guid",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "09a2ff42-c2ff-4e5a-b8b1-b03e15435337"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "trip status record - see table definitions"
                    }
                }
            }
        },
        "/pitaneSendTripAssigned": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "update trip record",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tripStatusUpdateAssigned"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneSendDropoffSector": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "update trip sector dropoff",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tripstatusupdatesector"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneSendTripPickup": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "update trip record",
                "deprecated": true,
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tripstatusupdatepickup"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneSendTripPickupByGUID": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "update trip record",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tripstatusupdatepickupbyguid"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneSendTripDropOff": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "update trip record",
                "deprecated": true,
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tripstatusupdatedropoff"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneSendTripDropOffByGUID": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "update trip record",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tripstatusupdatedropoffbyguid"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneSendTripPayment": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "update trip payment record",
                "deprecated": true,
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tripstatusupdatepayment"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneSendTripPaymentByGuid": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "update trip payment record",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tripstatusupdatepaymentguid"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneSendTripNoShow": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "update trip record",
                "deprecated": true,
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tripstatusupdatenoshow"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneSendTripNoShowByGUID": {
            "post": {
                "tags": [
                    "trip"
                ],
                "description": "update trip record",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tripstatusupdatenoshowbyguid"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneCustomerMobilityIndications": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Retrieve indications",
                "responses": {
                    "200": {
                        "description": "indications - see table definitions",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pitaneMobilityIndicationsByCustomer": {
            "get": {
                "tags": [
                    "data/tables"
                ],
                "description": "Retrieve customer specific mobility indications",
                "parameters": [
                    {
                        "name": "rei_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "indications - see table definitions",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pitaneCustomerMobilityTools": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Retrieve customer specific tools",
                "responses": {
                    "200": {
                        "description": "tools - see table definitions",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pitaneCustomerActiveTripRetrievebyEmail": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Retrieve trips by customer email address",
                "parameters": [
                    {
                        "name": "pla_email",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "info@domein.nl"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "tools - see table definitions",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pitaneMobilityToolsByCustomer": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Retrieve customer specific mobility tools",
                "parameters": [
                    {
                        "name": "rei_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "tools - see table definitions",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pitaneDataRetrieveNews": {
            "get": {
                "tags": [
                    "data/tables"
                ],
                "description": "Retrieve news items",
                "responses": {
                    "200": {
                        "description": "news record - see table definitions",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pitaneDataRetrieveMainNews": {
            "get": {
                "tags": [
                    "data/tables"
                ],
                "description": "Retrieve main news items",
                "responses": {
                    "200": {
                        "description": "news record - see table definitions",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pitaneDataAirportsCarTypes": {
            "get": {
                "tags": [
                    "data/tables"
                ],
                "description": "Retrieve airport / tariff items",
                "parameters": [
                    {
                        "name": "air_iata",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "AMS"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "airport / tariff record - see table definitions",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pitaneDataLedgers": {
            "get": {
                "tags": [
                    "data/financial"
                ],
                "description": "Retrieve ledgers",
                "responses": {
                    "200": {
                        "description": "ledger record - see table definitions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "0": {
                                        "value": "{\"result\":[\"\"]}"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pitaneRetrieveSubcentrales": {
            "get": {
                "tags": [
                    "data/tables"
                ],
                "description": "Retrieve subcentrales items",
                "responses": {
                    "200": {
                        "description": "subcentrale record - see table definitions"
                    }
                }
            }
        },
        "/pitaneRetrieveSubcentralesByPin": {
            "get": {
                "tags": [
                    "data/tables"
                ],
                "description": "Retrieve subcentrales items",
                "parameters": [
                    {
                        "name": "pin",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "subcentrale record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDataCompanies": {
            "get": {
                "tags": [
                    "data/tables"
                ],
                "description": "Retrieve company items",
                "responses": {
                    "200": {
                        "description": "company record - see table definitions",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pitaneDataCountries": {
            "get": {
                "tags": [
                    "data/tables"
                ],
                "description": "Retrieve country items",
                "responses": {
                    "200": {
                        "description": "country record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDataCrow": {
            "get": {
                "tags": [
                    "data/tables"
                ],
                "description": "Retrieve CROW indications",
                "responses": {
                    "200": {
                        "description": "CROW record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDataCostcenters": {
            "get": {
                "tags": [
                    "data/financial"
                ],
                "description": "Retrieve costcenters",
                "responses": {
                    "200": {
                        "description": "costcenter record - see table definitions",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pitanePostalZoneInternal": {
            "get": {
                "tags": [
                    "data/financial"
                ],
                "description": "Retrieve WMO zipcodes",
                "parameters": [
                    {
                        "name": "rei_guid",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "094654E2-EAEB-413E-9D95-D8F40956FA9D",
                        "required": true
                    },
                    {
                        "name": "pickup_postalcode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "5657EN",
                        "required": true
                    },
                    {
                        "name": "destination_postalcode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "5631ES",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "driver record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDataVAT": {
            "get": {
                "tags": [
                    "data/financial"
                ],
                "description": "Retrieve VAT codes",
                "responses": {
                    "200": {
                        "description": "VAT record - see table definitions",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pitaneDataTripTypes": {
            "get": {
                "tags": [
                    "data/tables"
                ],
                "description": "Auto generated using Swagger Inspector",
                "responses": {
                    "200": {
                        "description": "Auto generated using Swagger Inspector",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pitaneDataAirports": {
            "get": {
                "tags": [
                    "data/tables"
                ],
                "description": "Auto generated using Swagger Inspector",
                "responses": {
                    "200": {
                        "description": "Auto generated using Swagger Inspector",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pitaneDataTripStatus": {
            "get": {
                "tags": [
                    "data/tables"
                ],
                "description": "Auto generated using Swagger Inspector",
                "responses": {
                    "200": {
                        "description": "Auto generated using Swagger Inspector",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pitaneDriverRetrieveAccessbyPassword": {
            "get": {
                "tags": [
                    "driver"
                ],
                "description": "Retrieve driver information by password",
                "parameters": [
                    {
                        "name": "chf_email",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "g.saey@pitane.com",
                        "required": true
                    },
                    {
                        "name": "chf_app_paswoord",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "123456",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "driver record - see table definitions"
                    }
                }
            }
        },
        "/pitaneCustomerRetrieveAccessbyPassword": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Retrieve customer information by password",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "rei_email",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "g.saey@pitane.com",
                        "required": true
                    },
                    {
                        "name": "rei_app_paswoord",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "123456",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "customer record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDriverRetrieveAccessbyToken": {
            "get": {
                "tags": [
                    "driver"
                ],
                "description": "Retrieve driver information by access token",
                "parameters": [
                    {
                        "name": "chf_email",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "g.saey@pitane.com",
                        "required": true
                    },
                    {
                        "name": "chf_verificatie",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "123456",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "driver record - see table definitions"
                    }
                }
            }
        },
        "/pitaneCustomerRetrieveByEmail": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Retrieve customer information by email",
                "parameters": [
                    {
                        "name": "rei_email",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "g.saey@pitane.com",
                        "required": true
                    },
                    {
                        "name": "rei_app_paswoord",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "demo"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "customer record - see table definitions"
                    }
                }
            }
        },
        "/pitaneCustomerCheckByEmail": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Check customer account by email",
                "parameters": [
                    {
                        "name": "rei_email",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "g.saey@censys.nl",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "customer record - see table definitions"
                    }
                }
            }
        },
        "/pitaneCustomerRetrieveByGuid": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Retrieve customer information by guid",
                "parameters": [
                    {
                        "name": "rei_guid",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "EB091D61-8A88-436D-83AF-E9AB0F434341",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "customer record - see table definitions"
                    }
                }
            }
        },
        "/pitaneCustomerRetrieveCrowByGuid": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Retrieve customer CROW information by guid",
                "parameters": [
                    {
                        "name": "rei_guid",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "EB091D61-8A88-436D-83AF-E9AB0F434341",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "customer record - see table definitions"
                    }
                }
            }
        },
        "/pitaneCustomerRetrieveRelationsByGuid": {
            "get": {
                "tags": [
                    "customer"
                ],
                "description": "Retrieve customer relations information by guid",
                "parameters": [
                    {
                        "name": "rei_guid",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "A468667B-19BE-46D9-A9B1-43434DA565F3",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "customer record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDriverDeleteByGUID": {
            "post": {
                "tags": [
                    "customer"
                ],
                "description": "Delete driver account",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/chf_guid"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "transaction report - see table definitions"
                    }
                }
            }
        },
        "/pitaneDriverRetrievebyEmail": {
            "get": {
                "tags": [
                    "driver"
                ],
                "description": "Retrieve driver information by email",
                "parameters": [
                    {
                        "name": "chf_email",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "g.saey@pitane.com",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "driver record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDriverRetrieveStatusByEmail": {
            "get": {
                "tags": [
                    "driver"
                ],
                "description": "Retrieve driver shift information by email",
                "parameters": [
                    {
                        "name": "chf_email",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "g.saey@pitane.com",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "driver / shift record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDriverRetrieveShiftByEmail": {
            "get": {
                "tags": [
                    "driver"
                ],
                "description": "Retrieve driver shift information by email",
                "parameters": [
                    {
                        "name": "chf_email",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "g.saey@pitane.com",
                        "required": true
                    },
                    {
                        "name": "lsn_aanvang",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-08-18",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "driver / shift record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDriverRetrieveTripsbyShift": {
            "get": {
                "tags": [
                    "driver"
                ],
                "description": "Retrieve driver shift information by service",
                "parameters": [
                    {
                        "name": "chf_email",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "j.saey@censys.nl",
                        "required": true
                    },
                    {
                        "name": "lsn_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "93363",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "driver / shift record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDriverRetrieveShiftbyID": {
            "get": {
                "tags": [
                    "driver"
                ],
                "description": "Retrieve driver shift information",
                "parameters": [
                    {
                        "name": "chf_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "44",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "driver / shift record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDriverRetrieveTripsTrajectByShift": {
            "get": {
                "tags": [
                    "driver"
                ],
                "description": "Retrieve driver shift traject information by service",
                "parameters": [
                    {
                        "name": "lsn_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "435221",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "driver / shift traject record - see table definitions"
                    }
                }
            }
        },
        "/pitaneDriverRetrieveFinishedTripsbyShift": {
            "get": {
                "tags": [
                    "driver"
                ],
                "description": "Retrieve driver planning availability",
                "parameters": [
                    {
                        "name": "chf_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "16",
                        "required": true
                    },
                    {
                        "name": "lsn_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1234",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "driver / planning table - see table definitions"
                    }
                }
            }
        },
        "/pitaneDriverRetrievePlannedTripsbyDriver": {
            "get": {
                "tags": [
                    "driver"
                ],
                "description": "Retrieve driver planning availability",
                "parameters": [
                    {
                        "name": "chf_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "10",
                        "required": true
                    },
                    {
                        "name": "pla_datum",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-08-18",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "driver / planning table - see table definitions"
                    }
                }
            }
        },
        "/pitaneFleetRetrieveByAvailability": {
            "get": {
                "tags": [
                    "driver"
                ],
                "description": "Retrieve driver fleet availability",
                "parameters": [
                    {
                        "name": "chf_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "driver / fleet table - see table definitions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/drivers"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pitaneCreateDriver": {
            "post": {
                "tags": [
                    "driver"
                ],
                "description": "Create driver record - see table definitions",
                "responses": {
                    "200": {
                        "description": "driver information - see table definitions"
                    }
                }
            }
        },
        "/pitaneCreateCustomer": {
            "post": {
                "tags": [
                    "customer"
                ],
                "description": "Create customer record - see table definitions",
                "responses": {
                    "200": {
                        "description": "customer information - see table definitions"
                    }
                }
            }
        },
        "/pitaneCreateAddress": {
            "post": {
                "tags": [
                    "customer"
                ],
                "description": "Create customer address record - see table definitions",
                "responses": {
                    "200": {
                        "description": "customer information - see table definitions"
                    }
                }
            }
        },
        "/pitaneUpdateCustomer": {
            "post": {
                "tags": [
                    "customer"
                ],
                "description": "Update customer record - see table definitions",
                "responses": {
                    "200": {
                        "description": "customer information - see table definitions"
                    }
                }
            }
        },
        "/pitaneUpdateAddress": {
            "post": {
                "tags": [
                    "customer"
                ],
                "description": "Update customer address record - see table definitions",
                "responses": {
                    "200": {
                        "description": "address information - see table definitions"
                    }
                }
            }
        },
        "/pitanePaxxGroup": {
            "post": {
                "tags": [
                    "paxx"
                ],
                "description": "Update customer record with PaXX group identifier - see table definitions",
                "deprecated": true,
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/paxxgroup"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "PaXX group unique identifier - see table definitions"
                    }
                }
            }
        },
        "/pitanePaxxGroupByGUID": {
            "post": {
                "tags": [
                    "paxx"
                ],
                "description": "Update customer record with PaXX group identifier - see table definitions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/paxxgroupguid"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "PaXX group unique identifier - see table definitions"
                    }
                }
            }
        },
        "/pitanePaxxUnGroup": {
            "post": {
                "tags": [
                    "paxx"
                ],
                "description": "Remove customer record from PaXX group identifier - see table definitions",
                "deprecated": true,
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/paxxgroup"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "PaXX group unique identifier - see table definitions"
                    }
                }
            }
        },
        "/pitanePaxxUnGroupByGUID": {
            "post": {
                "tags": [
                    "paxx"
                ],
                "description": "Remove customer record from PaXX group identifier - see table definitions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/paxxgroupguid"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "PaXX group unique identifier - see table definitions"
                    }
                }
            }
        },
        "/pitanePaxxTripStatus": {
            "get": {
                "tags": [
                    "paxx"
                ],
                "description": "Retrieve trip status by Paxx group",
                "parameters": [
                    {
                        "name": "rei_pax_level",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1",
                        "required": true
                    },
                    {
                        "name": "rei_pax_identifier",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "d271d937-c8c1-44a3-8beb-a9fd8514a86f",
                        "required": true
                    },
                    {
                        "name": "pla_datum",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "2021-06-15",
                        "required": true
                    },
                    {
                        "name": "pla_status",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "T",
                        "required": false
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 500,
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "trip status table - see table definitions"
                    }
                }
            }
        },
        "/pitaneUpdateDriver": {
            "post": {
                "tags": [
                    "driver"
                ],
                "description": "Update driver record - see table definitions",
                "responses": {
                    "200": {
                        "description": "driver information - see table definitions"
                    }
                }
            }
        },
        "/pitaneDeleteDriver": {
            "delete": {
                "tags": [
                    "driver"
                ],
                "parameters": [
                    {
                        "name": "chf_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "example": "123"
                    }
                ],
                "description": "Delete driver record - see table definitions",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "components": {
        "responses": {
            "200-OK": {
                "description": "Request succeeded"
            },
            "201-Created": {
                "description": "Resource successfully created"
            },
            "204-NoContent": {
                "description": "The respons contains empty dataset"
            },
            "400-BadRequest": {
                "description": "Bad Request"
            },
            "401-Unauthorized": {
                "description": "User not authorized"
            },
            "403-Forbidden": {
                "description": "You don't have the necessary permissions to perform operation"
            },
            "404-NotFound": {
                "description": "The requested resource was not found"
            },
            "405-MethodNotAllowed": {
                "description": "You're using an HTTP method on a resource which does not support it"
            },
            "408-RequestTimeOut": {
                "description": "The request gets a timemout"
            },
            "429-Unauthorized": {
                "description": "Too many requests"
            },
            "500-ServerError": {
                "description": "A server error was encountered - client should try again later"
            },
            "501-NotImplemented": {
                "description": "This endpoint is not implemented, see documentation"
            },
            "202Accepted": {
                "description": "Request was successfully accepted for processing but has not yet completed."
            },
            "204NoContent": {
                "description": "Request was successful, no content to return."
            },
            "400BadRequest": {
                "description": "Bad request. See https://github.com/TOMP-WG/TOMP-API/wiki/Error-handling-in-TOMP for further explanation of error code."
            },
            "401Unauthorized": {
                "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested"
            },
            "403Forbidden": {
                "description": "The client does not have access rights to the content, i.e. they are unauthorized, so server is rejecting to give proper response. Unlike 401, the client's identity is known to the server."
            },
            "404NotFound": {
                "description": "The requested resources does not exist or the requester is not authorized to see it or know it exists."
            },
            "409Conflict": {
                "description": "The request will not be fulfilled. The request itself is legal, but the content conflicts with the server and might be stale. The user might try again after looking up the current state of the resource."
            },
            "410Gone": {
                "description": "The requested resource is no longer available. This is permanent."
            }
        },
        "schemas": {
            "ArrayOfCombinedTrips": {
                "description": "Collection of combined trip records",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "pla_route": {
                            "type": "integer"
                        },
                        "pla_id": {
                            "type": "integer"
                        },
                        "pla_van": {
                            "type": "integer"
                        },
                        "pla_naar": {
                            "type": "integer"
                        },
                        "pla_tijdstip_ophalen": {
                            "type": "string",
                            "pattern": "0000-00-00T00:00:00"
                        }
                    }
                },
                "example": [
                    {
                        "pla_route": 432,
                        "pla_id": 10,
                        "pla_van": 1,
                        "pla_naar": 3,
                        "pla_tijdstip_ophalen": "2020-07-15T20:00:00"
                    },
                    {
                        "pla_route": 432,
                        "pla_id": 11,
                        "pla_van": 2,
                        "pla_naar": 4,
                        "pla_tijdstip_ophalen": "2020-07-15T20:12:00"
                    },
                    {
                        "pla_route": 433,
                        "pla_id": 45,
                        "pla_van": 1,
                        "pla_naar": 2,
                        "pla_tijdstip_ophalen": "2020-07-15T20:00:00"
                    },
                    {
                        "pla_route": 433,
                        "pla_id": 451,
                        "pla_van": 3,
                        "pla_naar": 4,
                        "pla_tijdstip_ophalen": "2020-07-15T20:12:00"
                    }
                ]
            },
            "drivers": {
                "description": "Driver record primary keys",
                "properties": {
                    "chf_id": {
                        "type": "integer",
                        "example": "123456"
                    }
                }
            },
            "planningRequest": {
                "description": "A travel planning for which bookable options are requested",
                "type": "object",
                "required": [
                    "from",
                    "nrOfTravelers"
                ],
                "properties": {
                    "from": {
                        "$ref": "#/components/schemas/place"
                    },
                    "radius": {
                        "description": "Maximum distance in meters a user wants to travel to reach the travel option",
                        "type": "number"
                    },
                    "to": {
                        "$ref": "#/components/schemas/place"
                    },
                    "departureTime": {
                        "description": "The intended departure time. If left out and no arrivalTime is set, the current time should be assumed.",
                        "type": "string",
                        "format": "date-time"
                    },
                    "arrivalTime": {
                        "description": "The intended arrival time, at the to place if set otherwise the time the user intends to stop using the asset.",
                        "type": "string",
                        "format": "date-time"
                    },
                    "nrOfTravelers": {
                        "description": "The number of people that intend to travel, including the customer.",
                        "type": "integer",
                        "minimum": 1
                    },
                    "travelers": {
                        "description": "Extra information about the people that intend to travel if relevant, length must be less than or equal to nrOftravelers.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/traveler"
                        }
                    },
                    "useAssets": {
                        "description": "The specific asset(s) the user wishes to receive leg options for",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "an asset id for this operator, this might be an asset id from /operator/available-assets, but can also be another identification for this asset (e.g. bluetooth id)"
                        }
                    },
                    "userGroups": {
                        "description": "Id(s) of user groups that the user belongs to. This provides access to exclusive assets that are hidden to the public. Id's are agreed upon by TO and MP.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "a usergroup id for this operator"
                        }
                    },
                    "useAssetTypes": {
                        "description": "The specific asset type(s) the user wishes to receive leg options for",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "an asset type id for this operator (from /operator/available-assets)"
                        }
                    }
                }
            },
            "driverstatus": {
                "description": "Driver email address",
                "properties": {
                    "chf_email": {
                        "type": "string",
                        "example": "bas@pieters.nl"
                    },
                    "latitude": {
                        "type": "number",
                        "example": "51.552422"
                    },
                    "longitude": {
                        "type": "number",
                        "example": "5.542853"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    },
                    "statuscode": {
                        "type": "integer",
                        "example": "14"
                    }
                },
                "required": [
                    "chf_email",
                    "latitude",
                    "longitude",
                    "speed",
                    "statuscode"
                ]
            },
            "bookingOperation": {
                "type": "object",
                "description": "operation on the bookingOption",
                "required": [
                    "operation"
                ],
                "properties": {
                    "operation": {
                        "type": "string",
                        "enum": [
                            "CANCEL",
                            "EXPIRE",
                            "DENY",
                            "COMMIT"
                        ]
                    }
                }
            },
            "drivernotifystatus": {
                "description": "Driver email address",
                "properties": {
                    "chf_email": {
                        "type": "string",
                        "example": "bas@pieters.nl"
                    },
                    "chf_tpl_inloggen": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "required": [
                    "chf_email",
                    "chf_tpl_inloggen"
                ]
            },
            "batterylevel": {
                "description": "Car battery level update",
                "properties": {
                    "wag_id": {
                        "type": "integer",
                        "example": "123"
                    },
                    "battery": {
                        "type": "integer",
                        "example": "14"
                    },
                    "latitude": {
                        "type": "number",
                        "example": "51.552422"
                    },
                    "longitude": {
                        "type": "number",
                        "example": "5.542853"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    }
                },
                "required": [
                    "wag_id",
                    "battery",
                    "latitude",
                    "longitude",
                    "speed"
                ]
            },
            "tripstatus": {
                "description": "Update trip status",
                "properties": {
                    "sub_token": {
                        "type": "string",
                        "example": "54DEF-67642-AD89-CV56-As89"
                    },
                    "pla_id": {
                        "type": "integer",
                        "example": "123"
                    },
                    "pla_pm_nummer": {
                        "type": "integer",
                        "example": "987"
                    },
                    "pla_timestamp": {
                        "type": "string",
                        "pattern": "0000-00-00T00:00:00",
                        "example": "2020-07-15T20:00:00"
                    },
                    "pla_latitude": {
                        "type": "number",
                        "example": "51.552422"
                    },
                    "pla_longitude": {
                        "type": "number",
                        "example": "5.542853"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "14"
                    },
                    "licenseplate": {
                        "type": "string",
                        "example": "123AB78"
                    }
                },
                "required": [
                    "sub_token",
                    "pla_id",
                    "pla_pm_nummer",
                    "pla_timestamp",
                    "pla_latitude",
                    "pla_longitude",
                    "speed",
                    "licenseplate"
                ]
            },
            "carstatus": {
                "description": "Update car status",
                "properties": {
                    "wag_id": {
                        "type": "integer",
                        "example": "123"
                    },
                    "latitude": {
                        "type": "number",
                        "example": "51.552422"
                    },
                    "longitude": {
                        "type": "number",
                        "example": "5.542853"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    },
                    "statuscode": {
                        "type": "integer",
                        "example": "14"
                    }
                },
                "required": [
                    "wag_id",
                    "latitude",
                    "longitude",
                    "speed",
                    "statuscode"
                ]
            },
            "devicestatus": {
                "description": "car / device IMEI",
                "properties": {
                    "dev_imei": {
                        "type": "string",
                        "example": "454143SD"
                    },
                    "latitude": {
                        "type": "number",
                        "example": "51.552422"
                    },
                    "longitude": {
                        "type": "number",
                        "example": "5.542853"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    },
                    "statuscode": {
                        "type": "integer",
                        "example": "14"
                    }
                },
                "required": [
                    "dev_imei",
                    "latitude",
                    "longitude",
                    "speed",
                    "statuscode"
                ]
            },
            "devicezonestatus": {
                "description": "update taxizone",
                "properties": {
                    "lsn_id": {
                        "type": "integer",
                        "example": "1234"
                    },
                    "latitude": {
                        "type": "number",
                        "example": "51.552422"
                    },
                    "longitude": {
                        "type": "number",
                        "example": "5.542853"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    },
                    "lsn_taxizone": {
                        "type": "integer",
                        "example": "12"
                    }
                },
                "required": [
                    "lsn_id",
                    "latitude",
                    "longitude",
                    "speed",
                    "lsn_taxizone"
                ]
            },
            "marketing": {
                "description": "Receive marketing information",
                "properties": {
                    "pla_id": {
                        "type": "integer",
                        "example": "12345",
                        "description": "Trip ID"
                    },
                    "pla_marketing": {
                        "type": "string",
                        "example": "ab-df443-5ebE3",
                        "description": "Marketing GUID"
                    }
                },
                "required": [
                    "text"
                ]
            },
            "absentrecord": {
                "description": "create absent record",
                "properties": {
                    "ond_rei_id": {
                        "type": "integer",
                        "example": "5529",
                        "description": "Customer ID"
                    },
                    "ond_start": {
                        "type": "string",
                        "example": "2020-07-15T13:14:00",
                        "description": "Start date/time registration"
                    },
                    "ond_einde": {
                        "type": "string",
                        "example": "2099-12-31T23:59:59",
                        "description": "End date/time registration"
                    },
                    "ond_isziek": {
                        "type": "integer",
                        "example": "0",
                        "description": "Indication person is sick"
                    },
                    "ond_reden": {
                        "type": "string",
                        "example": "tandartsbezoek",
                        "description": "Reason absence reporting"
                    },
                    "ond_referentie": {
                        "type": "string",
                        "example": "MS-GF43",
                        "description": "Reference"
                    },
                    "ond_soort": {
                        "type": "integer",
                        "example": "0",
                        "description": "Action type scripts"
                    }
                },
                "required": [
                    "ond_rei_id",
                    "ond_start",
                    "ond_einde",
                    "ond_isziek",
                    "ond_reden",
                    "ond_soort"
                ]
            },
            "absentrecordguid": {
                "description": "create absent record",
                "properties": {
                    "rei_guid": {
                        "type": "string",
                        "example": "aebf3250-02c3-416c-8083-abebf0223b9f",
                        "description": "Customer GUID"
                    },
                    "ond_start": {
                        "type": "string",
                        "example": "2020-07-15T13:14:00",
                        "description": "Start date/time registration"
                    },
                    "ond_einde": {
                        "type": "string",
                        "example": "2099-12-31T23:59:59",
                        "description": "End date/time registration"
                    },
                    "ond_isziek": {
                        "type": "integer",
                        "example": "0",
                        "description": "Indication person is sick"
                    },
                    "ond_reden": {
                        "type": "string",
                        "example": "tandartsbezoek",
                        "description": "Reason absence reporting"
                    },
                    "ond_referentie": {
                        "type": "string",
                        "example": "MS-GF43",
                        "description": "Reference"
                    },
                    "ond_soort": {
                        "type": "integer",
                        "example": "0",
                        "description": "Action type scripts"
                    }
                },
                "required": [
                    "rei_guid",
                    "ond_start",
                    "ond_einde",
                    "ond_isziek",
                    "ond_reden",
                    "ond_soort"
                ]
            },
            "chatmessage": {
                "description": "Chat record",
                "properties": {
                    "lsn_wag_id": {
                        "type": "integer",
                        "example": "123456"
                    },
                    "lsn_chf_id": {
                        "type": "integer",
                        "example": "123456"
                    },
                    "chatmessage": {
                        "type": "string",
                        "example": "Ik ben later door vertraging op de weg"
                    },
                    "latitude": {
                        "type": "number",
                        "example": "51.552422"
                    },
                    "longitude": {
                        "type": "number",
                        "example": "5.542853"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    }
                },
                "required": [
                    "lsn_wag_id",
                    "lsn_chf_id",
                    "lsn_kilometerstand_aanvang",
                    "latitude",
                    "longitude",
                    "speed",
                    "chf_subcentrale",
                    "dev_imei"
                ]
            },
            "absentUpdaterecord": {
                "description": "update absent record",
                "properties": {
                    "ond_rei_id": {
                        "type": "integer",
                        "example": "5529",
                        "description": "Customer ID"
                    },
                    "ond_id": {
                        "type": "integer",
                        "example": "23",
                        "description": "Absense ID"
                    },
                    "ond_einde": {
                        "type": "string",
                        "example": "2099-12-31T23:59:59",
                        "description": "End date/time registration"
                    }
                },
                "required": [
                    "ond_rei_id",
                    "ond_id",
                    "ond_einde"
                ]
            },
            "absentUpdaterecordguid": {
                "description": "update absent record",
                "properties": {
                    "rei_guid": {
                        "type": "string",
                        "example": "aebf3250-02c3-416c-8083-abebf0223b9f",
                        "description": "Customer GUID"
                    },
                    "ond_id": {
                        "type": "integer",
                        "example": "23",
                        "description": "Absense ID"
                    },
                    "ond_einde": {
                        "type": "string",
                        "example": "2099-12-31T23:59:59",
                        "description": "End date/time registration"
                    }
                },
                "required": [
                    "rei_guid",
                    "ond_id",
                    "ond_einde"
                ]
            },
            "inputfield": {
                "description": "default input field",
                "properties": {
                    "text": {
                        "type": "string",
                        "example": "demo",
                        "description": "textfield"
                    }
                },
                "required": [
                    "text"
                ]
            },
            "distancelatlng": {
                "description": "lat/lng routing",
                "properties": {
                    "oph_latitude": {
                        "type": "number",
                        "example": "51.4549528"
                    },
                    "oph_longitude": {
                        "type": "number",
                        "example": "5.3914105"
                    },
                    "best_latitude": {
                        "type": "number",
                        "example": "51.9174794"
                    },
                    "best_longitude": {
                        "type": "number",
                        "example": "4.5386724"
                    }
                },
                "required": [
                    "oph_latitude",
                    "oph_longitude",
                    "best_latitude",
                    "best_longitude"
                ]
            },
            "gpsbylicense": {
                "description": "pause record",
                "properties": {
                    "wag_kenteken": {
                        "type": "string",
                        "example": "33XJ04"
                    },
                    "latitude": {
                        "type": "number",
                        "example": "51.215434"
                    },
                    "longitude": {
                        "type": "number",
                        "example": "5.542853"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    }
                },
                "required": [
                    "wag_kenteken",
                    "latitude",
                    "longitude",
                    "speed"
                ]
            },
            "pauserecord": {
                "description": "pause record",
                "properties": {
                    "lsn_id": {
                        "type": "integer",
                        "example": "123456"
                    },
                    "latitude": {
                        "type": "number",
                        "example": "51.215434"
                    },
                    "longitude": {
                        "type": "number",
                        "example": "5.542853"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    },
                    "dev_imei": {
                        "type": "string",
                        "example": "1234543SD"
                    }
                },
                "required": [
                    "lsn_id",
                    "latitude",
                    "longitude",
                    "speed",
                    "dev_imei"
                ]
            },
            "address": {
                "description": "address field",
                "properties": {
                    "streetAddress": {
                        "type": "string",
                        "example": "Marinus van Meelweg 12 5657 Eindhoven"
                    },
                    "areaReference": {
                        "type": "string",
                        "example": "Airport area"
                    },
                    "postalCode": {
                        "type": "string",
                        "example": "5657 EN"
                    },
                    "country": {
                        "type": "string",
                        "example": "NL"
                    }
                }
            },
            "latlng": {
                "description": "lat/lng record",
                "properties": {
                    "latitude": {
                        "type": "number",
                        "example": "51.4549528"
                    },
                    "longitude": {
                        "type": "number",
                        "example": "5.3914105"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    }
                },
                "required": [
                    "latitude",
                    "longitude",
                    "speed"
                ]
            },
            "tripticket": {
                "description": "planning record",
                "properties": {
                    "pla_id": {
                        "type": "integer",
                        "example": "12345"
                    },
                    "pla_email": {
                        "type": "string",
                        "example": "g.saey@pitane.com"
                    },
                    "latitude": {
                        "type": "number",
                        "example": "51.4549528"
                    },
                    "longitude": {
                        "type": "number",
                        "example": "5.3914105"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    }
                },
                "required": [
                    "pla_id",
                    "pla_email",
                    "latitude",
                    "longitude",
                    "speed"
                ]
            },
            "tripticketguid": {
                "description": "planning record",
                "properties": {
                    "pla_guid": {
                        "type": "string",
                        "example": "C1F754DB-0EFE-4928-97F6-AB57313BACEC"
                    },
                    "pla_email": {
                        "type": "string",
                        "example": "g.saey@pitane.com"
                    },
                    "latitude": {
                        "type": "number",
                        "example": "51.4549528"
                    },
                    "longitude": {
                        "type": "number",
                        "example": "5.3914105"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    }
                },
                "required": [
                    "pla_guid",
                    "pla_email",
                    "latitude",
                    "longitude",
                    "speed"
                ]
            },
            "planning": {
                "description": "planning record",
                "properties": {
                    "pla_id": {
                        "type": "integer",
                        "example": "12345"
                    },
                    "latitude": {
                        "type": "number",
                        "example": "51.4549528"
                    },
                    "longitude": {
                        "type": "number",
                        "example": "5.3914105"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    }
                },
                "required": [
                    "pla_id",
                    "latitude",
                    "longitude",
                    "speed"
                ]
            },
            "costplanning": {
                "description": "planning record",
                "properties": {
                    "pla_id": {
                        "type": "integer",
                        "example": "12345"
                    },
                    "art_id": {
                        "type": "integer",
                        "example": "15"
                    },
                    "art_aantal": {
                        "type": "number",
                        "example": "1.00"
                    },
                    "art_prijs": {
                        "type": "number",
                        "example": "9.80"
                    },
                    "art_tekst": {
                        "type": "string",
                        "example": "dagblad"
                    },
                    "latitude": {
                        "type": "number",
                        "example": "51.4549528"
                    },
                    "longitude": {
                        "type": "number",
                        "example": "5.3914105"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    }
                },
                "required": [
                    "pla_id",
                    "art_id",
                    "art_aantal",
                    "artprijs",
                    "art_tekst",
                    "latitude",
                    "longitude",
                    "speed"
                ]
            },
            "prdsconfirmation": {
                "description": "PRDS confirmation",
                "properties": {
                    "prds_id": {
                        "type": "integer",
                        "example": "123"
                    },
                    "latitude": {
                        "type": "number",
                        "example": "51.552422"
                    },
                    "longitude": {
                        "type": "number",
                        "example": "5.542853"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    }
                },
                "required": [
                    "prds_id",
                    "latitude",
                    "longitude",
                    "speed"
                ]
            },
            "cardelay": {
                "description": "delay record",
                "properties": {
                    "wag_id": {
                        "type": "integer",
                        "example": 123
                    },
                    "delay": {
                        "type": "integer",
                        "example": 300,
                        "description": "delay in seconds"
                    },
                    "latitude": {
                        "type": "number",
                        "example": "51.4549528"
                    },
                    "longitude": {
                        "type": "number",
                        "example": "5.3914105"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "45"
                    }
                },
                "required": [
                    "latitude",
                    "longitude"
                ]
            },
            "costid": {
                "type": "object",
                "description": "delete cost record",
                "properties": {
                    "pko_id": {
                        "type": "integer",
                        "description": "Cost ID"
                    }
                },
                "required": [
                    "pko_id"
                ]
            },
            "chironreservation": {
                "type": "object",
                "description": "chiron reservation record",
                "properties": {
                    "pitaneCustomer": {
                        "type": "string",
                        "description": "Customer ID"
                    },
                    "tripNumber": {
                        "type": "string",
                        "description": "Trip number"
                    },
                    "kboNumber": {
                        "type": "string",
                        "description": "KBO number"
                    },
                    "kboName": {
                        "type": "string",
                        "description": "KBO name"
                    }
                },
                "required": [
                    "pitaneCustomer",
                    "tripNumber",
                    "kboNumber",
                    "kboName"
                ],
                "example": {
                    "pitaneCustomer": "FFFFFFFFFF",
                    "tripNumber": "123",
                    "kboNumber": "",
                    "kboName": "Taxi ABC"
                }
            },
            "chirondeparture": {
                "type": "object",
                "description": "chiron trip departure record",
                "properties": {
                    "pitaneCustomer": {
                        "type": "string",
                        "description": "Customer ID"
                    },
                    "tripNumber": {
                        "type": "string",
                        "description": "Trip number"
                    },
                    "kboNumber": {
                        "type": "string",
                        "description": "KBO number"
                    },
                    "kboName": {
                        "type": "string",
                        "description": "KBO name"
                    },
                    "price": {
                        "type": "number",
                        "description": "trip price including taxes"
                    },
                    "distance": {
                        "type": "number",
                        "description": "trip distance kilometers"
                    },
                    "departureLatitude": {
                        "type": "number",
                        "description": "trip latitude pickup"
                    },
                    "departureLongitude": {
                        "type": "number",
                        "description": "trip longitude pickup"
                    },
                    "departureTime": {
                        "type": "string",
                        "description": "trip departure time"
                    },
                    "driverCardNumber": {
                        "type": "string",
                        "description": "driver card number"
                    },
                    "vehicleLicensePlate": {
                        "type": "string",
                        "description": "car licenseplate"
                    }
                },
                "required": [
                    "pitaneCustomer",
                    "tripNumber",
                    "kboNumber",
                    "kboName",
                    "departureLatitude",
                    "departureLongitude",
                    "departureTime",
                    "driverCardNumber",
                    "vehicleLicensePlate"
                ],
                "example": {
                    "pitaneCustomer": "FFFFFFFFFF",
                    "tripNumber": "123",
                    "kboNumber": "",
                    "kboName": "Taxi ABC",
                    "price": 21.13,
                    "distance": 17.3,
                    "departureLatitude": 51.44853,
                    "departureLongitude": 5.41649,
                    "departureTime": "2020-09-25T14:00:00",
                    "driverCardNumber": "1234567890",
                    "vehicleLicensePlate": "1ABC123"
                }
            },
            "chironarrival": {
                "type": "object",
                "description": "chiron trip departure record",
                "properties": {
                    "pitaneCustomer": {
                        "type": "string",
                        "description": "Customer ID"
                    },
                    "tripNumber": {
                        "type": "string",
                        "description": "Trip number"
                    },
                    "kboNumber": {
                        "type": "string",
                        "description": "KBO number"
                    },
                    "kboName": {
                        "type": "string",
                        "description": "KBO name"
                    },
                    "price": {
                        "type": "number",
                        "description": "trip price including taxes"
                    },
                    "distance": {
                        "type": "number",
                        "description": "trip distance kilometers"
                    },
                    "departureLatitude": {
                        "type": "number",
                        "description": "trip latitude pickup"
                    },
                    "departureLongitude": {
                        "type": "number",
                        "description": "trip longitude pickup"
                    },
                    "departureTime": {
                        "type": "string",
                        "description": "trip departure time"
                    },
                    "arrivalLatitude": {
                        "type": "number",
                        "description": "trip latitude dropoff"
                    },
                    "arrivalLongitude": {
                        "type": "number",
                        "description": "trip longitude dropoff"
                    },
                    "arrivalTime": {
                        "type": "string",
                        "description": "trip dropoff time"
                    },
                    "driverCardNumber": {
                        "type": "string",
                        "description": "driver card number"
                    },
                    "vehicleLicensePlate": {
                        "type": "string",
                        "description": "car licenseplate"
                    }
                },
                "required": [
                    "pitaneCustomer",
                    "tripNumber",
                    "kboNumber",
                    "kboName",
                    "arrivalLatitude",
                    "arrivalLongitude",
                    "arrivalTime",
                    "departureLatitude",
                    "departureLongitude",
                    "departureTime",
                    "driverCardNumber",
                    "vehicleLicensePlate"
                ],
                "example": {
                    "pitaneCustomer": "FFFFFFFFFF",
                    "tripNumber": "123",
                    "kboNumber": "",
                    "kboName": "Taxi ABC",
                    "price": 21.13,
                    "distance": 17.3,
                    "arrivalLatitude": 51.45457,
                    "arrivalLongitude": 5.38948,
                    "arrivalTime": "2020-09-25T14:19:45",
                    "departureLatitude": 51.44853,
                    "departureLongitude": 5.41649,
                    "departureTime": "2020-09-25T14:00:00",
                    "driverCardNumber": "1234567890",
                    "vehicleLicensePlate": "1ABC123"
                }
            },
            "trip": {
                "type": "object",
                "description": "default trip record",
                "properties": {
                    "pla_id": {
                        "type": "integer",
                        "description": "trip ID"
                    },
                    "pla_naam_reiziger": {
                        "type": "string",
                        "description": "trip ID"
                    }
                },
                "required": [
                    "pla_id"
                ],
                "example": {
                    "pla_naam_reiziger": "Geert Bakelmans",
                    "pla_datum": "2020-07-15T20:12:00",
                    "pla_tijdstip": "2020-07-15T20:12:00",
                    "pla_tijdstip_locatie": "2020-07-15T20:52:00",
                    "pla_soortvervoer": "P",
                    "pla_soortwagen": "T",
                    "pla_ophstraat": "Marinus van Meelweg",
                    "pla_ophnummer": "12",
                    "pla_ophnummertoe": "",
                    "pla_ophpostcode": "5657 EN",
                    "pla_ophstad": "Eindhoven",
                    "pla_oph_land": "nl",
                    "pla_opmerking": "bij de buren aanbellen",
                    "pla_oph_latitude": "51.23361",
                    "pla_oph_longitude": "5.26651",
                    "pla_tarief_bedrijf": 12
                }
            },
            "crow": {
                "type": "object",
                "description": "default crow/trip record",
                "properties": {
                    "pcr_pla_id": {
                        "type": "integer",
                        "description": "trip ID"
                    },
                    "pcr_cro_id": {
                        "type": "integer",
                        "description": "CROW element"
                    }
                },
                "required": [
                    "pcr_pla_id",
                    "pcr_cro_id",
                    "pcr_aantal"
                ],
                "example": {
                    "pcr_pla_id": 386379,
                    "pcr_cro_id": 34,
                    "pcr_aantal": 1
                }
            },
            "tripcancel": {
                "description": "cancel pending or waiting trip",
                "properties": {
                    "pla_guid": {
                        "type": "string",
                        "example": "20d5eeb9-470d-461e-83b3-d53cb692314e"
                    },
                    "pla_opmerking": {
                        "type": "string",
                        "example": "alternative transport found"
                    }
                },
                "required": [
                    "pla_guid"
                ]
            },
            "tripstatusupdatepickup": {
                "description": "trip status update record",
                "properties": {
                    "pla_id": {
                        "type": "integer",
                        "example": "2233195"
                    },
                    "pla_tijdstip_bestemmen": {
                        "type": "string",
                        "example": "22-07-15T14:11:45"
                    },
                    "pla_odo_start": {
                        "type": "integer",
                        "example": "125023"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    },
                    "pla_pasnummer": {
                        "type": "string",
                        "example": "AB-23456789876"
                    },
                    "pla_wachtseconden": {
                        "type": "integer",
                        "example": "195"
                    },
                    "latitude": {
                        "type": "string",
                        "example": "5.538763"
                    },
                    "longitude": {
                        "type": "string",
                        "example": "51.37212"
                    },
                    "lsn_id": {
                        "type": "integer",
                        "example": "123"
                    }
                },
                "required": [
                    "pla_id",
                    "pla_tijdstip_bestemmen",
                    "pla_odo_start",
                    "pla_pasnummer",
                    "pla_wachtseconden",
                    "latitude",
                    "longitude",
                    "speed",
                    "lsn_id"
                ]
            },
            "tripstatusupdatepickupbyguid": {
                "description": "trip status update record",
                "properties": {
                    "pla_guid": {
                        "type": "string",
                        "example": "9537884b-2a98-46a0-8026-1f2a1b251ce6"
                    },
                    "pla_tijdstip_bestemmen": {
                        "type": "string",
                        "example": "22-07-15T14:11:45"
                    },
                    "pla_odo_start": {
                        "type": "integer",
                        "example": "125023"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    },
                    "pla_pasnummer": {
                        "type": "string",
                        "example": "AB-23456789876"
                    },
                    "pla_wachtseconden": {
                        "type": "integer",
                        "example": "195"
                    },
                    "latitude": {
                        "type": "string",
                        "example": "5.538763"
                    },
                    "longitude": {
                        "type": "string",
                        "example": "51.37212"
                    },
                    "lsn_id": {
                        "type": "integer",
                        "example": "123"
                    }
                },
                "required": [
                    "pla_guid",
                    "pla_tijdstip_bestemmen",
                    "pla_odo_start",
                    "pla_pasnummer",
                    "pla_wachtseconden",
                    "latitude",
                    "longitude",
                    "speed",
                    "lsn_id"
                ]
            },
            "paxxgroup": {
                "description": "customer paxx group update",
                "properties": {
                    "rei_id": {
                        "type": "integer",
                        "example": "2233195"
                    },
                    "rei_gebdatum": {
                        "type": "string",
                        "example": "1996-07-15"
                    },
                    "rei_pax_level": {
                        "type": "integer",
                        "example": "1"
                    },
                    "rei_pax_identifier": {
                        "type": "string",
                        "example": "d271d937-c8c1-44a3-8beb-a9fd8514a86f"
                    }
                },
                "required": [
                    "rei_id",
                    "rei_gebdatum",
                    "rei_grouplevel",
                    "rei_pax_identifier"
                ]
            },
            "paxxgroupguid": {
                "description": "customer paxx group update",
                "properties": {
                    "rei_guid": {
                        "type": "string",
                        "example": "b271d937-c8c1-44a3-8beb-a9fd8514a86f"
                    },
                    "rei_gebdatum": {
                        "type": "string",
                        "example": "1996-07-15"
                    },
                    "rei_pax_level": {
                        "type": "integer",
                        "example": "1"
                    },
                    "rei_pax_identifier": {
                        "type": "string",
                        "example": "d271d937-c8c1-44a3-8beb-a9fd8514a86f"
                    }
                },
                "required": [
                    "rei_guid",
                    "rei_gebdatum",
                    "rei_grouplevel",
                    "rei_pax_identifier"
                ]
            },
            "tripstatusupdatepayment": {
                "description": "trip payment update record",
                "properties": {
                    "pla_id": {
                        "type": "integer",
                        "example": "2233195"
                    },
                    "pla_tx_paid_amount": {
                        "type": "number",
                        "example": "12.30"
                    },
                    "pla_tx_paid_extra": {
                        "type": "number",
                        "example": "0.00"
                    },
                    "pla_betaling": {
                        "type": "integer",
                        "example": "1"
                    },
                    "latitude": {
                        "type": "string",
                        "example": "5.538763"
                    },
                    "longitude": {
                        "type": "string",
                        "example": "51.37212"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    }
                },
                "required": [
                    "pla_id",
                    "pla_tx_paid_amount",
                    "pla_tx_paid_extra",
                    "pla_betaling",
                    "latitude",
                    "longitude",
                    "speed"
                ]
            },
            "tripstatusupdatepaymentguid": {
                "description": "trip payment update record",
                "properties": {
                    "pla_guid": {
                        "type": "string",
                        "example": "72e2c166-ddd9-4b09-ada1-c97aeca144b3"
                    },
                    "pla_status": {
                        "type": "string",
                        "example": "W"
                    },
                    "pla_tx_paid_amount": {
                        "type": "number",
                        "example": "12.30"
                    },
                    "pla_tx_paid_extra": {
                        "type": "number",
                        "example": "0.00"
                    },
                    "pla_betaling": {
                        "type": "integer",
                        "example": "1"
                    },
                    "latitude": {
                        "type": "string",
                        "example": "5.538763"
                    },
                    "longitude": {
                        "type": "string",
                        "example": "51.37212"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    }
                },
                "required": [
                    "pla_guid",
                    "pla_tx_paid_amount",
                    "pla_tx_paid_extra",
                    "pla_betaling",
                    "pla_status",
                    "latitude",
                    "longitude",
                    "speed"
                ]
            },
            "tripStatusUpdateAssigned": {
                "description": "trip status update record",
                "properties": {
                    "pla_id": {
                        "type": "integer",
                        "example": "2233195"
                    },
                    "pla_tijdstip_toewijzen": {
                        "type": "string",
                        "example": "22-07-15T14:11:45"
                    },
                    "pla_odo_start": {
                        "type": "integer",
                        "example": "125023"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    },
                    "pla_ckenteken": {
                        "type": "string",
                        "example": "AB-123-90"
                    },
                    "pla_ctel_uitvoerder": {
                        "type": "string",
                        "example": "0401235469"
                    },
                    "pla_cuitvoerder": {
                        "type": "string",
                        "example": "Van Bakel Taxi"
                    },
                    "pla_extern_voertuigID": {
                        "type": "integer",
                        "example": "195"
                    },
                    "latitude": {
                        "type": "string",
                        "example": "5.538763"
                    },
                    "longitude": {
                        "type": "string",
                        "example": "51.37212"
                    }
                },
                "required": [
                    "pla_id",
                    "pla_tijdstip_toewijzen",
                    "pla_extern_voertuigID",
                    "pla_ckenteken",
                    "pla_ctel_uitvoerder",
                    "pla_cuitvoerder",
                    "pla_wachtseconden",
                    "latitude",
                    "longitude",
                    "speed"
                ]
            },
            "tripstatusupdatenoshow": {
                "description": "trip status update record",
                "properties": {
                    "pla_id": {
                        "type": "integer",
                        "example": "2233195"
                    },
                    "pla_tijdstip_bestemmen": {
                        "type": "string",
                        "example": "22-07-15T14:11:45"
                    },
                    "pla_odo_start": {
                        "type": "integer",
                        "example": "125023"
                    },
                    "pla_redenloosmelden": {
                        "type": "string",
                        "example": "klant niet gevonden"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    },
                    "pla_pasnummer": {
                        "type": "string",
                        "example": "AB-23456789876"
                    },
                    "pla_wachtseconden": {
                        "type": "integer",
                        "example": "195"
                    },
                    "latitude": {
                        "type": "string",
                        "example": "5.538763"
                    },
                    "longitude": {
                        "type": "string",
                        "example": "51.37212"
                    },
                    "lsn_id": {
                        "type": "integer",
                        "example": "123"
                    }
                },
                "required": [
                    "pla_id",
                    "pla_tijdstip_bestemmen",
                    "pla_odo_start",
                    "pla_pasnummer",
                    "pla_wachtseconden",
                    "latitude",
                    "longitude",
                    "speed",
                    "lsn_id"
                ]
            },
            "tripstatusupdatenoshowbyguid": {
                "description": "trip status update record",
                "properties": {
                    "pla_guid": {
                        "type": "string",
                        "example": "DDB67F40-5265-490D-82FE-DE2B6EB6920E"
                    },
                    "pla_tijdstip_bestemmen": {
                        "type": "string",
                        "example": "22-07-15T14:11:45"
                    },
                    "pla_odo_start": {
                        "type": "integer",
                        "example": "125023"
                    },
                    "pla_redenloosmelden": {
                        "type": "string",
                        "example": "klant niet gevonden"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    },
                    "pla_pasnummer": {
                        "type": "string",
                        "example": "AB-23456789876"
                    },
                    "pla_wachtseconden": {
                        "type": "integer",
                        "example": "195"
                    },
                    "latitude": {
                        "type": "string",
                        "example": "5.538763"
                    },
                    "longitude": {
                        "type": "string",
                        "example": "51.37212"
                    },
                    "lsn_id": {
                        "type": "integer",
                        "example": "123"
                    }
                },
                "required": [
                    "pla_guid",
                    "pla_tijdstip_bestemmen",
                    "pla_odo_start",
                    "pla_pasnummer",
                    "pla_wachtseconden",
                    "latitude",
                    "longitude",
                    "speed",
                    "lsn_id"
                ]
            },
            "asset": {
                "type": "object",
                "required": [
                    "id",
                    "overriddenProperties"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Identifier of an asset. Whenever used in Operator Information changed after every trip (GDPR)."
                    },
                    "isReserved": {
                        "type": "boolean",
                        "description": "true indicates the bike is currently reserved for someone else"
                    },
                    "isReservedFrom": {
                        "description": "optional addition to determine if an asset is reserved in the future",
                        "type": "string",
                        "format": "date-time"
                    },
                    "isReservedTo": {
                        "description": "optional addition to determine when asset is available in the future",
                        "type": "string",
                        "format": "date-time"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "true indicates the asset is currently disabled (broken)"
                    },
                    "rentalUrl": {
                        "type": "string",
                        "description": "deep-linking option from GBFS+. Only added to be consistent with GBFS 2.0",
                        "format": "URL",
                        "example": "https://www.rentmyfreebike.com/app?sid=1234567890",
                        "deprecated": true
                    },
                    "rentalUrlAndroid": {
                        "type": "string",
                        "description": "deep-linking option from GBFS 2.0. Only added to be consistent with GBFS 2.0",
                        "format": "URL",
                        "example": "https://www.rentmyfreebike.com/app?sid=1234567890&platform=android",
                        "deprecated": true
                    },
                    "rentalUrlIOS": {
                        "type": "string",
                        "description": "deep-linking option from GBFS 2.0. Only added to be consistent with GBFS 2.0",
                        "format": "URL",
                        "example": "https://www.rentmyfreebike.com/app?sid=1234567890&platform=ios",
                        "deprecated": true
                    },
                    "overriddenProperties": {
                        "$ref": "#/components/schemas/assetProperties"
                    }
                }
            },
            "cardType": {
                "description": "A generic description of a card, asset class and acceptors is only allowed for DISCOUNT/TRAVEL/OTHER cards",
                "type": "object",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "description": "The broad category of card",
                        "type": "string",
                        "enum": [
                            "ID",
                            "DISCOUNT",
                            "TRAVEL",
                            "BANK",
                            "CREDIT",
                            "PASSPORT",
                            "OTHER"
                        ]
                    },
                    "subType": {
                        "description": "For use in case of OTHER. Can be used in bilateral agreements.",
                        "type": "string"
                    },
                    "assetClass": {
                        "$ref": "#/components/schemas/assetClass"
                    },
                    "acceptors": {
                        "description": "references to accepting parties, only if applicable",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "maas-id"
                        }
                    }
                }
            },
            "assetClass": {
                "type": "string",
                "description": "These classes are taken from the NeTeX standard, but ALL and UNKNOWN are removed. On the other hand OTHER and PARKING are added.",
                "enum": [
                    "AIR",
                    "BUS",
                    "TROLLEYBUS",
                    "TRAM",
                    "COACH",
                    "RAIL",
                    "INTERCITYRAIL",
                    "URBANRAIL",
                    "METRO",
                    "WATER",
                    "CABLEWAY",
                    "FUNICULAR",
                    "TAXI",
                    "SELFDRIVE",
                    "FOOT",
                    "BICYCLE",
                    "MOTORCYCLE",
                    "CAR",
                    "SHUTTLE",
                    "OTHER",
                    "PARKING",
                    "MOPED",
                    "STEP"
                ]
            },
            "assetType": {
                "type": "object",
                "required": [
                    "id",
                    "assetClass",
                    "sharedProperties"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier of an asset type,"
                    },
                    "stationId": {
                        "type": "string",
                        "description": "If staionId is present, the nrAvailable is expected to find the availableity at that particular station"
                    },
                    "nrAvailable": {
                        "type": "integer"
                    },
                    "assets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/asset"
                        }
                    },
                    "assetClass": {
                        "$ref": "#/components/schemas/assetClass"
                    },
                    "assetSubClass": {
                        "type": "string",
                        "description": "a more precise classification of the asset, like 'cargo bike', 'public bus', 'coach bus', 'office bus', 'water taxi',  'segway'. This is mandatory when using 'OTHER' as class."
                    },
                    "sharedProperties": {
                        "$ref": "#/components/schemas/assetProperties"
                    }
                }
            },
            "phone": {
                "type": "object",
                "properties": {
                    "preferred": {
                        "description": "only one phone in this array can have a true in this property",
                        "type": "boolean"
                    },
                    "number": {
                        "description": "phone number. In case of international usage, always provide the country code.",
                        "type": "string",
                        "pattern": "^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\.0-9]*$",
                        "example": "+31-48934758 or +(0075)-834923384 or 020 1234 1234"
                    },
                    "kind": {
                        "type": "string",
                        "enum": [
                            "LANDLINE",
                            "MOBILE"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "PRIVATE",
                            "BUSINESS",
                            "OTHER"
                        ]
                    }
                }
            },
            "card": {
                "description": "Any kind of card that isn't a license, only provide the cards that are required",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/cardType"
                    },
                    {
                        "type": "object",
                        "required": [
                            "cardNumber",
                            "validUntil"
                        ],
                        "properties": {
                            "cardDescription": {
                                "description": "description of the card",
                                "type": "string"
                            },
                            "cardNumber": {
                                "description": "number of the card, like ID number, credit card or bank account number",
                                "type": "string"
                            },
                            "cardAdditionalNumber": {
                                "description": "additional number, like CVC code or IBAN code",
                                "type": "string"
                            },
                            "validUntil": {
                                "type": "string",
                                "format": "date"
                            },
                            "country": {
                                "$ref": "#/components/schemas/country"
                            }
                        }
                    }
                ]
            },
            "assetProperties": {
                "description": "what kind of asset is this? Classify it, give the aspects. Most aspects are optional and should be used when applicable.",
                "properties": {
                    "name": {
                        "description": "name of asset (type), required in either assetType or asset, should match Content-Language",
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/place"
                    },
                    "fuel": {
                        "type": "string",
                        "enum": [
                            "NONE",
                            "GASOLINE",
                            "DIESEL",
                            "ELECTRIC",
                            "HYBRID_GASOLINE",
                            "HYBRID_DIESEL",
                            "HYBRID_GAS",
                            "HYDROGEN",
                            "GAS",
                            "BIO_MASS",
                            "KEROSINE",
                            "OTHER"
                        ]
                    },
                    "energyLabel": {
                        "description": "Energy efficiency",
                        "type": "string",
                        "enum": [
                            "A",
                            "B",
                            "C",
                            "D",
                            "E"
                        ]
                    },
                    "co2PerKm": {
                        "type": "number"
                    },
                    "brand": {
                        "type": "string",
                        "description": "brand of the asset"
                    },
                    "model": {
                        "type": "string"
                    },
                    "buildingYear": {
                        "type": "integer"
                    },
                    "travelAbroad": {
                        "type": "boolean",
                        "description": "true indicates asset is allowed to travel abroad"
                    },
                    "airConditioning": {
                        "type": "boolean",
                        "description": "true indicates airconditioning required"
                    },
                    "cabrio": {
                        "type": "boolean",
                        "description": "true indicates cabrio required"
                    },
                    "colour": {
                        "type": "string",
                        "description": "colour of the asset, should match Content-Language"
                    },
                    "cargo": {
                        "type": "string",
                        "description": "describes options to carry cargo, should match Content-Language"
                    },
                    "easyAccessibility": {
                        "type": "string",
                        "description": "describes if asset is or needs to be easily accessible",
                        "enum": [
                            "LIFT",
                            "ESCALATOR",
                            "GROUND_LEVEL",
                            "SIGHTIMPAIRMENT",
                            "HEARINGIMPAIRMENT",
                            "WHEELCHAIR"
                        ]
                    },
                    "gears": {
                        "type": "integer",
                        "description": "number of gears of the asset"
                    },
                    "gearbox": {
                        "type": "string",
                        "description": "type of gearbox",
                        "enum": [
                            "MANUAL",
                            "AUTOMATIC",
                            "SEMIAUTOMATIC"
                        ]
                    },
                    "image": {
                        "description": "Link to an image of the asset",
                        "type": "string",
                        "format": "URL",
                        "example": "https://files.fietsersbond.nl/app/uploads/2014/10/30151126/ST2_Men_Side_CityKit-Stromer.jpg"
                    },
                    "infantSeat": {
                        "type": "boolean",
                        "description": "true indicates infant seat required"
                    },
                    "persons": {
                        "type": "integer",
                        "description": "number of persons able to use the asset",
                        "minimum": 1
                    },
                    "pets": {
                        "type": "boolean",
                        "description": "true indicates pets are allowed on asset"
                    },
                    "propulsion": {
                        "type": "string",
                        "description": "way in which the asset is powered",
                        "enum": [
                            "MUSCLE",
                            "ELECTRIC",
                            "GASOLINE",
                            "DIESEL",
                            "HYBRID",
                            "LPG",
                            "HYDROGEN"
                        ]
                    },
                    "smoking": {
                        "type": "boolean",
                        "description": "true indicates smoking is allowed on asset"
                    },
                    "stateOfCharge": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 100,
                        "description": "percentage of charge available"
                    },
                    "towingHook": {
                        "type": "boolean",
                        "description": "true indicates towing hook required"
                    },
                    "undergroundParking": {
                        "type": "boolean",
                        "description": "true indicates underground parking is allowed with asset"
                    },
                    "winterTires": {
                        "type": "boolean",
                        "description": "true indicates winter tires required"
                    },
                    "other": {
                        "type": "string",
                        "description": "free text to describe asset, should match Content-Language"
                    },
                    "meta": {
                        "description": "this object can contain extra information about the type of asset. For instance values from the 'Woordenboek Reizigerskenmerken'. [https://github.com/efel85/TOMP-API/issues/17]. These values can also be used in the planning.",
                        "type": "object",
                        "additionalProperties": true
                    }
                }
            },
            "bankAccount": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "account name",
                        "type": "string"
                    },
                    "number": {
                        "description": "account number",
                        "type": "string"
                    },
                    "country": {
                        "$ref": "#/components/schemas/country"
                    },
                    "bankIdentification": {
                        "description": "bank identification, like BIC code",
                        "type": "string"
                    }
                }
            },
            "bookingState": {
                "description": "The life-cycle state of the booking (from NEW to FINISHED)",
                "type": "string",
                "enum": [
                    "NEW",
                    "PENDING",
                    "REJECTED",
                    "RELEASED",
                    "EXPIRED",
                    "CONDITIONAL_CONFIRMED",
                    "CONFIRMED",
                    "CANCELLED",
                    "STARTED",
                    "FINISHED"
                ],
                "example": "CONFIRMED"
            },
            "leg": {
                "description": "A planned (segment of) a booked trip using one asset type",
                "type": "object",
                "required": [
                    "from",
                    "assetType"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier (TO) of this leg",
                        "type": "string"
                    },
                    "from": {
                        "description": "The departure location of this leg, using this asset type",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/place"
                            }
                        ]
                    },
                    "to": {
                        "description": "The destination of this leg, using this asset type",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/place"
                            }
                        ]
                    },
                    "departureTime": {
                        "description": "The departure time of this leg",
                        "type": "string",
                        "format": "date-time"
                    },
                    "arrivalTime": {
                        "description": "The intended arrival time at the to place",
                        "type": "string",
                        "format": "date-time"
                    },
                    "travelerReferenceNumbers": {
                        "description": "reference to the travelers field of the request. If missing, it is refering to the first (if any). it is an array to facilitate multiple users on one leg (e.g. using a car). If multiple access informations are needed, please create a leg per used asset.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assetType": {
                        "description": "The asset type used in this leg as determined during booking",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/assetType"
                            }
                        ]
                    },
                    "legSequenceNumber": {
                        "description": "The order of the leg in the booking. There can be multiple legs with the same sequence (different user or parallel usage (eg. parking lot and a bike)).",
                        "type": "integer"
                    },
                    "asset": {
                        "description": "The concrete asset used for the execution of the leg",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/asset"
                            }
                        ]
                    },
                    "pricing": {
                        "description": "The leg-specific pricing information, all fares are additive, if the booking does not have pricing set all legs should",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/fare"
                            }
                        ]
                    },
                    "suboperator": {
                        "$ref": "#/components/schemas/suboperator"
                    }
                }
            },
            "legState": {
                "type": "string",
                "description": "status of a leg",
                "enum": [
                    "NOT_STARTED",
                    "PREPARING",
                    "IN_USE",
                    "PAUSED",
                    "FINISHING",
                    "FINISHED",
                    "ISSUE_REPORTED"
                ]
            },
            "distance": {
                "description": "The estimated distance travelled in the leg (in meters)",
                "type": "integer",
                "minimum": 0,
                "example": 7250
            },
            "duration": {
                "description": "A duration of some time (relative to a time) in milliseconds",
                "type": "integer",
                "maximum": 2147483647,
                "minimum": 0,
                "example": 11112
            },
            "endpoint": {
                "type": "object",
                "description": "a formal description of an endpoint.",
                "required": [
                    "method",
                    "path",
                    "status"
                ],
                "properties": {
                    "method": {
                        "type": "string",
                        "enum": [
                            "POST",
                            "PUT",
                            "GET",
                            "DELETE",
                            "PATCH"
                        ]
                    },
                    "path": {
                        "description": "the exact path of the endpoint, starting after the base URL",
                        "type": "string",
                        "example": "/planning-options/"
                    },
                    "eventType": {
                        "description": "in case the path is ending in /events, the event type/operator enum should be added here.",
                        "type": "string",
                        "enum": [
                            "PREPARE",
                            "ASSIGN_ASSET",
                            "SET_IN_USE",
                            "PAUSE",
                            "START_FINISHING",
                            "FINISH",
                            "ISSUE",
                            "CANCEL",
                            "EXPIRE",
                            "DENY",
                            "COMMIT"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "NOT_IMPLEMENTED",
                            "DIALECT",
                            "IMPLEMENTED"
                        ]
                    },
                    "supportsPaging": {
                        "description": "does this endpoint support paging? In that case this endpoint can be accessed using query parameters offset=x and limit=y. Only allowed at endpoints that have specified these query parameters.",
                        "type": "boolean",
                        "default": false
                    },
                    "maxPageSize": {
                        "description": "the maximum size of the pages (only valid when supportsPaging=true). If the limit-parameter of the request is above this amount, a http code 400 will be returned.",
                        "type": "number"
                    }
                },
                "example": {
                    "withoutPaging": {
                        "method": "POST",
                        "path": "/booking/{id}/events",
                        "eventType": "COMMIT",
                        "status": "IMPLEMENTED"
                    },
                    "withPaging": {
                        "method": "POST",
                        "path": "/operator/stations",
                        "status": "IMPLEMENTED",
                        "supportsPaging": true,
                        "maxPageSize": 100
                    }
                }
            },
            "suboperator": {
                "type": "object",
                "description": "The operator of a leg or asset, in case this is not the TO itself but should be shown to the user",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the operator, could match Content-Language"
                    },
                    "maasId": {
                        "type": "string",
                        "description": "the maasId from the operator"
                    },
                    "description": {
                        "type": "string",
                        "description": "short description of the operator, should match Content-Language"
                    },
                    "contact": {
                        "type": "string",
                        "description": "contact information, should match Content-Language"
                    }
                }
            },
            "conditionDeposit": {
                "description": "in case the TO demands a deposit before usage. Requesting and refunding should be done using the /payment/claim-extra-costs endpoint.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/condition"
                    },
                    {
                        "$ref": "#/components/schemas/amountOfMoney"
                    }
                ]
            },
            "conditionPayWhenFinished": {
                "description": "in case the TO demands a direct payment after usage.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/condition"
                    }
                ]
            },
            "conditionPostponedCommit": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/condition"
                    },
                    {
                        "type": "object",
                        "required": [
                            "ultimateResponseTime"
                        ],
                        "properties": {
                            "ultimateResponseTime": {
                                "type": "string",
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "amountOfMoney": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "This should be in the base unit as defined by the ISO 4217 currency code with the appropriate number of decimal places and omitting the currency symbol. e.g. if the price is in US Dollars the price would be 9.95. This is inclusive VAT",
                        "type": "number",
                        "example": 9.95
                    },
                    "amountExVat": {
                        "type": "number",
                        "example": 8.95
                    },
                    "currencyCode": {
                        "description": "ISO 4217 currency code",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3
                    },
                    "vatRate": {
                        "type": "number",
                        "description": "value added tax rate (percentage of amount)",
                        "example": 21.0
                    },
                    "vatCountryCode": {
                        "$ref": "#/components/schemas/country"
                    }
                }
            },
            "conditionRequireBookingData": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/condition"
                    },
                    {
                        "type": "object",
                        "required": [
                            "requiredFields"
                        ],
                        "properties": {
                            "requiredFields": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "FROM_ADDRESS",
                                        "TO_ADDRESS",
                                        "BIRTHDATE",
                                        "EMAIL",
                                        "PERSONAL_ADDRESS",
                                        "PHONE_NUMBERS",
                                        "LICENSES",
                                        "BANK_CARDS",
                                        "DISCOUNT_CARDS",
                                        "TRAVEL_CARDS",
                                        "ID_CARDS",
                                        "CREDIT_CARDS",
                                        "NAME",
                                        "AGE"
                                    ]
                                }
                            }
                        }
                    }
                ]
            },
            "systemHours": {
                "type": "object",
                "required": [
                    "days",
                    "startTime",
                    "endTime"
                ],
                "properties": {
                    "userType": {
                        "type": "string",
                        "description": "This indicates that this set of rental hours applies to either members or non-members only.",
                        "enum": [
                            "MEMBER",
                            "NON_MEMBERS"
                        ],
                        "example": "MEMBER"
                    },
                    "stationId": {
                        "type": "string",
                        "description": "If this parameter is present, it means that startTime and endTime correspond to the opening and closing hours of the station. (GET /operator/stations)"
                    },
                    "regionId": {
                        "type": "string",
                        "description": "If this parameter is present, it means that startTime and endTime correspond to the opening and closing hours for the region. (GET /operator/regions)"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "HH:MM time"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "HH:MM time"
                    },
                    "days": {
                        "type": "array",
                        "description": "An array of abbreviations (first 3 letters) of English names of the days of the week that this hour object applies to (i.e. [\"mon\", \"tue\"]). Each day can only appear once within all of the hours objects in this feed.",
                        "items": {
                            "$ref": "#/components/schemas/day"
                        }
                    }
                }
            },
            "day": {
                "type": "string",
                "enum": [
                    "MON",
                    "TUE",
                    "WED",
                    "THU",
                    "FRI",
                    "SAT",
                    "SUN"
                ]
            },
            "conditionReturnArea": {
                "description": "a return area. In the condition list there can be multiple return area's.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/condition"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "stationId": {
                                "description": "station to which the asset should be returned",
                                "type": "string"
                            },
                            "returnArea": {
                                "description": "area in which the asset should be returned as GeoJSON Polygon coordinates",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/geojsonPolygon"
                                    }
                                ]
                            },
                            "coordinates": {
                                "$ref": "#/components/schemas/coordinates"
                            },
                            "returnHours": {
                                "description": "the return hours of the facility (if different from operating-hours)",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/systemHours"
                                }
                            }
                        }
                    }
                ]
            },
            "conditionUpfrontPayment": {
                "description": "in case the TO demands a upfront payment before usage. The payment should be made in the booking phase.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/condition"
                    }
                ]
            },
            "condition": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/conditionDeposit"
                    },
                    {
                        "$ref": "#/components/schemas/conditionPayWhenFinished"
                    },
                    {
                        "$ref": "#/components/schemas/conditionPostponedCommit"
                    },
                    {
                        "$ref": "#/components/schemas/conditionRequireBookingData"
                    },
                    {
                        "$ref": "#/components/schemas/conditionReturnArea"
                    },
                    {
                        "$ref": "#/components/schemas/conditionUpfrontPayment"
                    }
                ],
                "discriminator": {
                    "propertyName": "conditionType"
                },
                "required": [
                    "conditionType"
                ],
                "properties": {
                    "conditionType": {
                        "description": "The specific subclass of condition, should match the schema name exactly",
                        "type": "string"
                    },
                    "id": {
                        "description": "An identifier for this condition that can be used to refer to this condition",
                        "type": "string",
                        "example": "deposit50eu"
                    }
                }
            },
            "token": {
                "description": "The validity token (such as booking ID, travel ticket etc.) that MaaS clients will display to show their right to travel, or use to access an asset",
                "type": "object",
                "required": [
                    "validFrom",
                    "validUntil",
                    "tokenType",
                    "tokenData"
                ],
                "properties": {
                    "validFrom": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "validUntil": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "tokenType": {
                        "description": "The type of data held in this token, will later be an enum",
                        "type": "string",
                        "example": "QR-code"
                    },
                    "tokenData": {
                        "description": "Arbitrary data the TO may pass along the ticket to the client (e.g. a booking code, base64 encoded binary, QR code), later will be one of several types",
                        "type": "object",
                        "additionalProperties": true
                    }
                }
            },
            "chamberOfCommerceInfo": {
                "description": "To identify the operator",
                "type": "object",
                "properties": {
                    "number": {
                        "type": "string"
                    },
                    "place": {
                        "type": "string"
                    }
                }
            },
            "legEvent": {
                "type": "object",
                "description": "event for the execution",
                "required": [
                    "time",
                    "event"
                ],
                "properties": {
                    "time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "event": {
                        "type": "string",
                        "enum": [
                            "PREPARE",
                            "ASSIGN_ASSET",
                            "SET_IN_USE",
                            "PAUSE",
                            "START_FINISHING",
                            "FINISH",
                            "TIME_EXTEND",
                            "TIME_POSTPONE"
                        ]
                    },
                    "comment": {
                        "type": "string",
                        "description": "free text, should match Content-Language"
                    },
                    "url": {
                        "type": "array",
                        "description": "urls to support the event e.g. pictures justifying the exit conditions",
                        "items": {
                            "type": "string",
                            "format": "url"
                        }
                    },
                    "asset": {
                        "$ref": "#/components/schemas/asset"
                    }
                }
            },
            "coordinates": {
                "type": "object",
                "description": "a lon, lat (WGS84, EPSG:4326)",
                "required": [
                    "lat",
                    "lng"
                ],
                "properties": {
                    "lng": {
                        "type": "number",
                        "example": 6.169639
                    },
                    "lat": {
                        "type": "number",
                        "example": 52.253279
                    }
                }
            },
            "legProgress": {
                "type": "object",
                "description": "provides current asset location & duration and distance of the current leg",
                "required": [
                    "coordinates"
                ],
                "properties": {
                    "coordinates": {
                        "$ref": "#/components/schemas/coordinates"
                    },
                    "duration": {
                        "$ref": "#/components/schemas/duration"
                    },
                    "distance": {
                        "$ref": "#/components/schemas/distance"
                    }
                }
            },
            "scenario": {
                "type": "string",
                "enum": [
                    "POSTPONED_COMMIT",
                    "DEPOSIT",
                    "PAY_WHEN_FINISHED",
                    "REQUIRE_BOOKING_DATA",
                    "RETURN_AREA",
                    "UPFRONT_PAYMENT"
                ]
            },
            "endpointImplementation": {
                "type": "object",
                "description": "a complete endpoint description, containing all endpoints, their status, but also the served scenarios and implemented process flows. The identifiers for the process flows can be found at https://github.com/TOMP-WG/TOMP-API/wiki/ProcessIdentifiers",
                "required": [
                    "version",
                    "baseUrl",
                    "endpoints",
                    "scenarios",
                    "processIdentifiers"
                ],
                "properties": {
                    "version": {
                        "type": "string"
                    },
                    "baseUrl": {
                        "type": "string"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/endpoint"
                        }
                    },
                    "scenarios": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/scenario"
                        }
                    },
                    "processIdentifiers": {
                        "$ref": "#/components/schemas/processIdentifiers"
                    }
                },
                "example": {
                    "version": "0.5.0",
                    "baseUrl": "https://dummy-bikes.org/",
                    "endpoints": [
                    ],
                    "scenarios": [
                        "POSTPONED_COMMIT"
                    ],
                    "processIdentifiers": {
                        "planning": [
                            "LOCATION_BASED"
                        ],
                        "booking": [
                            "ACCESS_CODE_QR",
                            "ACCESS_CODE_IN_COMMIT_EVENT"
                        ]
                    }
                }
            },
            "error": {
                "type": "object",
                "description": "An error that the service may send, e.g. in case of invalid input, missing authorization or internal service error. See https://github.com/TOMP-WG/TOMP-API/wiki/Error-handling-in-TOMP for further explanation of error code.",
                "properties": {
                    "errorcode": {
                        "type": "number",
                        "description": "The TOMP specific error code. See https://github.com/TOMP-WG/TOMP-API/wiki/Error-handling-in-TOMP for more details of this error."
                    },
                    "type": {
                        "type": "string",
                        "description": "The category of this type of error."
                    },
                    "title": {
                        "type": "string",
                        "description": "A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except to match Content-Language"
                    },
                    "status": {
                        "type": "integer",
                        "description": "The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem."
                    },
                    "detail": {
                        "type": "string",
                        "description": "A human-readable explanation specific to this occurrence of the problem, could match Content-Language"
                    },
                    "instance": {
                        "type": "string",
                        "description": "A URI reference that identifies the specific occurrence of the problem.  It may or may not yield further information if dereferenced."
                    }
                }
            },
            "processIdentifiers": {
                "type": "object",
                "required": [
                    "operatorInformation",
                    "planning",
                    "booking",
                    "tripExecution",
                    "support",
                    "payment",
                    "general"
                ],
                "properties": {
                    "operatorInformation": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "planning": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "booking": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tripExecution": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "support": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "payment": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "general": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "requirements": {
                "description": "Requirements the users has ((dis)abilities, share [TRUE|FALSE], preferences [TBD]). See also 'https://github.com/TOMP-WG/TOMP-API/blob/master/documents/Woordenboek%20Reizigerskenmerken%20CROW.pdf'",
                "type": "object",
                "additionalProperties": true
            },
            "license": {
                "description": "driver or usage license for a specific user. Contains the number and the assetType you're allowed to operate (e.g. driver license for CAR)",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/licenseType"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "number": {
                                "type": "string",
                                "example": "1287948792"
                            },
                            "licenseCode": {
                                "description": "in most countries a driver license has also a code. As TO you can exactly verify, based on this code if the license allows to operate it's assets, if the assetType too generic.",
                                "example": "D4",
                                "type": "string"
                            },
                            "validUntil": {
                                "type": "string",
                                "format": "date"
                            }
                        }
                    }
                ]
            },
            "licenseType": {
                "description": "A category of license to use a certain asset class",
                "type": "object",
                "required": [
                    "assetClass"
                ],
                "properties": {
                    "assetClass": {
                        "$ref": "#/components/schemas/assetClass"
                    },
                    "issuingCountry": {
                        "$ref": "#/components/schemas/country"
                    }
                }
            },
            "booking": {
                "description": "The booking information describing the state and details of an agreed upon trip",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/bookingRequest"
                    },
                    {
                        "type": "object",
                        "required": [
                            "legs"
                        ],
                        "properties": {
                            "state": {
                                "$ref": "#/components/schemas/bookingState"
                            },
                            "legs": {
                                "description": "The legs of this booking, generally just one for simple legs, in order of how they will be travelled",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/leg"
                                }
                            },
                            "pricing": {
                                "description": "The pricing information of the overall booking, in addition to any leg pricing, if not all legs have pricing the booking should have the fare",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/fare"
                                    }
                                ]
                            },
                            "extraData": {
                                "description": "Arbitrary information that a TO can add",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                ]
            },
            "fare": {
                "description": "the total fare is the sum of all parts, except for the 'MAX' farePart. This one descripes the maximum price for the complete leg.",
                "required": [
                    "estimated",
                    "parts"
                ],
                "properties": {
                    "estimated": {
                        "description": "is this fare an estimation?",
                        "type": "boolean"
                    },
                    "description": {
                        "description": "user friendly description of the fare (e.g. 'full fare'), should match Content-Language",
                        "type": "string"
                    },
                    "class": {
                        "description": "in the future we'll set up an enumeration of possible \"fare classes\". For now it's free format.",
                        "type": "string"
                    },
                    "parts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/farePart"
                        }
                    }
                }
            },
            "farePart": {
                "description": "this describes a part of the fare (or discount). It contains a for instance the startup costs (fixed) or the flex part (e.g. 1.25 EUR per 2.0 MILES). The amount is tax included. In case of discounts, the values are negative. With 'MAX' you can specify e.g. a maximum of 15 euro per day. Percentage is mainly added for discounts. The `scale` properties create the ability to communicate scales (e.g. the first 4 kilometers you've to pay EUR 0.35 per kilometer, the kilometers 4 until 8 EUR 0.50 and above it EUR 0.80 per kilometer).",
                "example": {
                    "amount": 9.96,
                    "currencyCode": "EUR",
                    "vatRate": 21.0,
                    "type": "FLEX",
                    "unitType": "HOUR",
                    "units": 1
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/amountOfMoney"
                    },
                    {
                        "type": "object",
                        "required": [
                            "vatRate",
                            "amount"
                        ],
                        "properties": {
                            "type": {
                                "description": "type of fare part",
                                "type": "string",
                                "enum": [
                                    "FIXED",
                                    "FLEX",
                                    "MAX"
                                ]
                            },
                            "unitType": {
                                "type": "string",
                                "description": "in case of 'FLEX' mandatory. E.g. 0.5 EUR per HOUR",
                                "enum": [
                                    "KM",
                                    "SECOND",
                                    "MINUTE",
                                    "HOUR",
                                    "MILE",
                                    "PERCENTAGE"
                                ]
                            },
                            "units": {
                                "type": "number",
                                "description": "the number of km, seconds etc in the `per` part. In the first example of the description this should be 2.0"
                            },
                            "scaleFrom": {
                                "type": "number"
                            },
                            "scaleTo": {
                                "type": "number"
                            },
                            "scaleType": {
                                "type": "string",
                                "enum": [
                                    "KM",
                                    "MILE",
                                    "HOUR",
                                    "MINUTE"
                                ]
                            },
                            "name": {
                                "type": "string"
                            },
                            "class": {
                                "type": "string"
                            },
                            "meta": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                ]
            },
            "geojsonLine": {
                "description": "An array  of WGS84 coordinate pairs",
                "type": "array",
                "example": [
                    [
                        6.169639,
                        52.253279
                    ],
                    [
                        6.05623,
                        52.63473
                    ]
                ],
                "items": {
                    "$ref": "#/components/schemas/geojsonPoint"
                }
            },
            "geojsonPoint": {
                "description": "Geojson Coordinate",
                "type": "array",
                "minItems": 2,
                "maxItems": 2,
                "items": {
                    "type": "number"
                },
                "example": [
                    "lon",
                    "lat"
                ]
            },
            "geojsonPolygon": {
                "description": "geojson representation of a polygon. First and last point must be equal. See also https://geojson.org/geojson-spec.html#polygon and example https://geojson.org/geojson-spec.html#id4. The order should be lon, lat [[[lon1, lat1], [lon2,lat2], [lon3,lat3], [lon1,lat1]]], the first point should match the last point.",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/geojsonLine"
                },
                "example": [
                    [
                        [
                            1.0,
                            1.0
                        ],
                        [
                            0.0,
                            1.0
                        ],
                        [
                            0.0,
                            0.0
                        ],
                        [
                            1.0,
                            0.0
                        ],
                        [
                            1.0,
                            1.0
                        ]
                    ]
                ]
            },
            "journalEntry": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/amountOfMoney"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "journalId": {
                                "description": "id of the entry, leg id can be reused",
                                "type": "string"
                            },
                            "journalSequenceId": {
                                "description": "sequence id of the entry, in combination with journalId unique from TO perspective.",
                                "type": "string"
                            },
                            "invoiceId": {
                                "description": "the number of the invoice. Should be filled in when invoiced."
                            },
                            "invoiceDate": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "state": {
                                "$ref": "#/components/schemas/journalState"
                            },
                            "expirationDate": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "comment": {
                                "type": "string"
                            },
                            "distance": {
                                "description": "the travelled distance. Only if applicable.",
                                "type": "number"
                            },
                            "distanceType": {
                                "type": "string",
                                "enum": [
                                    "KM",
                                    "MILE"
                                ]
                            },
                            "usedTime": {
                                "description": "the time in seconds that the assed is used. Only if applicable.",
                                "type": "number"
                            },
                            "bankAccount": {
                                "$ref": "#/components/schemas/bankAccount"
                            },
                            "details": {
                                "description": "the specification of the amount; how is it composed.",
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/fare"
                                    },
                                    {
                                        "$ref": "#/components/schemas/extraCosts"
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "journalState": {
                "type": "string",
                "enum": [
                    "TO_INVOICE",
                    "INVOICED"
                ]
            },
            "journalCategory": {
                "type": "string",
                "enum": [
                    "ALL",
                    "DAMAGE",
                    "LOSS",
                    "STOLEN",
                    "EXTRA_USAGE",
                    "REFUND",
                    "FINE",
                    "OTHER_ASSET_USED",
                    "CREDIT",
                    "VOUCHER",
                    "DEPOSIT",
                    "OTHER"
                ]
            },
            "extraCosts": {
                "description": "Costs that the TO is charging the MP; credits are negative",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/amountOfMoney"
                    },
                    {
                        "type": "object",
                        "required": [
                            "reason",
                            "description",
                            "amount"
                        ],
                        "properties": {
                            "category": {
                                "$ref": "#/components/schemas/journalCategory"
                            },
                            "description": {
                                "description": "free text to describe the extra costs. Mandatory in case of 'OTHER', should match Content-Language",
                                "type": "string"
                            },
                            "number": {
                                "type": "number",
                                "description": "e.g. number of litres, number of kilowatthour, etc"
                            },
                            "numberType": {
                                "type": "string",
                                "enum": [
                                    "LITER",
                                    "KILOWATTHOUR",
                                    "CO2_COMPENSATION",
                                    "OTHER"
                                ]
                            },
                            "account": {
                                "$ref": "#/components/schemas/bankAccount"
                            },
                            "meta": {
                                "description": "Arbitrary metadata that a TO can add, like voucher codes",
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                ]
            },
            "traveler": {
                "description": "A generic description of a traveler, not including any identifying information",
                "type": "object",
                "properties": {
                    "isValidated": {
                        "description": "Whether this traveler's identity and properties have been verified by the MaaS provider",
                        "type": "boolean"
                    },
                    "age": {
                        "description": "Age of the traveler, may be approximate",
                        "type": "integer"
                    },
                    "referenceNumber": {
                        "description": "reference number of the traveler. This number could be used to refer to in the planning result.",
                        "type": "string",
                        "example": "SG-OO1-TOMP"
                    },
                    "cardTypes": {
                        "description": "The kind of cards this traveler possesses",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/cardType"
                        }
                    },
                    "licenseTypes": {
                        "description": "The kind of licenses this traveler possesses",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/licenseType"
                        }
                    },
                    "requirements": {
                        "$ref": "#/components/schemas/requirements"
                    }
                }
            },
            "customer": {
                "description": "A MaaS user that wishes to make a booking, only use the fields required by booking conditions",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/traveler"
                    },
                    {
                        "type": "object",
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "description": "The identifier MaaS uses to identify the customer",
                                "type": "string",
                                "example": "C7261B9E-80C6-4932-850D-C8BA797E18526"
                            },
                            "travelerReference": {
                                "description": "optional reference field to the travelers in the planning request.",
                                "type": "string"
                            },
                            "initials": {
                                "type": "string"
                            },
                            "firstName": {
                                "description": "First name of the customer",
                                "type": "string",
                                "example": "John"
                            },
                            "lastName": {
                                "description": "Last name of the customer",
                                "type": "string",
                                "example": "Doe"
                            },
                            "middleName": {
                                "description": "Middle name of the customer",
                                "type": "string",
                                "example": "von"
                            },
                            "prefix": {
                                "description": "prefix of the customer, like titles",
                                "type": "string"
                            },
                            "postfix": {
                                "description": "postfix of the customer, like titles",
                                "type": "string"
                            },
                            "phones": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/phone"
                                }
                            },
                            "email": {
                                "description": "the email address of the customer",
                                "type": "string"
                            },
                            "birthDate": {
                                "type": "string",
                                "format": "date"
                            },
                            "address": {
                                "$ref": "#/components/schemas/address"
                            },
                            "photo": {
                                "description": "base64 encoded",
                                "type": "string",
                                "format": "byte"
                            },
                            "cards": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/card"
                                }
                            },
                            "licenses": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/license"
                                }
                            }
                        }
                    }
                ]
            },
            "tripstatusupdatesector": {
                "description": "trip sector update record",
                "properties": {
                    "pla_id": {
                        "type": "integer",
                        "example": "2233195"
                    },
                    "pla_best_sector": {
                        "type": "integer",
                        "example": "195"
                    },
                    "latitude": {
                        "type": "string",
                        "example": "5.538763"
                    },
                    "longitude": {
                        "type": "string",
                        "example": "51.37212"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    }
                },
                "required": [
                    "pla_id",
                    "pla_best_sector",
                    "latitude",
                    "longitude",
                    "speed"
                ]
            },
            "bookingRequest": {
                "description": "A booking requested by the MP",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "A unique identifier for the TO to know this booking by",
                        "type": "string"
                    },
                    "from": {
                        "description": "information about the origin, only to supply when requested in the conditionRequireBookingData",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/place"
                            }
                        ]
                    },
                    "to": {
                        "description": "information about the destination, only to supply when requested in the conditionRequireBookingData",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/place"
                            }
                        ]
                    },
                    "customer": {
                        "description": "The user that wants to make this booking, only to supply when requested in the conditionRequireBookingData",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/customer"
                            }
                        ]
                    }
                }
            },
            "stopReference": {
                "type": "object",
                "description": "reference to a stop (can be nation specific). This can help to specific pinpoint a (bus) stop. Extra information about the stop is not supplied; you should find it elsewhere.",
                "required": [
                    "type",
                    "id",
                    "country"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "type of external reference (GTFS, CHB).",
                        "enum": [
                            "GTFS_STOP_ID",
                            "GTFS_STOP_CODE",
                            "GTFS_AREA_ID",
                            "CHB_STOP_PLACE_CODE",
                            "CHB_QUAY_CODE",
                            "NS_CODE"
                        ]
                    },
                    "id": {
                        "type": "string",
                        "description": "this field should contain the complete ID. E.g. NL:S:13121110 or BE:S:79640040"
                    },
                    "country": {
                        "$ref": "#/components/schemas/country"
                    }
                }
            },
            "country": {
                "type": "string",
                "description": "two-letter country codes according to ISO 3166-1",
                "maxLength": 2,
                "minLength": 2,
                "example": "NL"
            },
            "place": {
                "type": "object",
                "description": "a origin or destination of a leg, non 3D. lon/lat in WGS84.",
                "required": [
                    "coordinates"
                ],
                "properties": {
                    "name": {
                        "description": "Human readable name of the place, could match Content-Language",
                        "type": "string"
                    },
                    "stopReference": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/stopReference"
                        }
                    },
                    "stationId": {
                        "description": "reference to /operator/stations",
                        "type": "string"
                    },
                    "coordinates": {
                        "$ref": "#/components/schemas/coordinates"
                    },
                    "physicalAddress": {
                        "$ref": "#/components/schemas/address"
                    },
                    "extraInfo": {
                        "type": "object",
                        "additionalProperties": true
                    }
                }
            },
            "tripconfirmation": {
                "description": "trip confirmation record",
                "properties": {
                    "pla_id": {
                        "type": "integer",
                        "example": "2233195"
                    },
                    "pla_pm_nummer": {
                        "type": "integer",
                        "example": "998877"
                    },
                    "latitude": {
                        "type": "string",
                        "example": "5.538763"
                    },
                    "longitude": {
                        "type": "string",
                        "example": "51.37212"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    }
                },
                "required": [
                    "pla_id",
                    "pla_pm_nummer",
                    "latitude",
                    "longitude",
                    "speed"
                ]
            },
            "sms": {
                "description": "sms record",
                "properties": {
                    "access_key": {
                        "type": "string",
                        "example": "91cd1926-ac67-4a2e-990b-55c15c890b51",
                        "description": "Your personal access key for the SMS provider."
                    },
                    "recipient": {
                        "type": "string",
                        "pattern": "^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$",
                        "example": "+31612345678",
                        "description": "Only one phone number. In case of international usage, always provide the country code."
                    },
                    "originator": {
                        "type": "string",
                        "example": "PITANE",
                        "description": "Originator or number (max 10 characters)."
                    },
                    "body": {
                        "type": "string",
                        "example": "TEST SMS",
                        "description": "Your personal message."
                    }
                },
                "required": [
                    "access_key",
                    "recipient",
                    "originator",
                    "body"
                ]
            },
            "tripstatusupdatedropoff": {
                "description": "trip status update record",
                "properties": {
                    "pla_id": {
                        "type": "integer",
                        "example": "2233195"
                    },
                    "pla_tijdstip_vrijmelden": {
                        "type": "string",
                        "example": "2020-09-25T14:11:45"
                    },
                    "pla_odo_stop": {
                        "type": "integer",
                        "example": "125023"
                    },
                    "pla_pasnummer": {
                        "type": "string",
                        "example": "AB-23456789876"
                    },
                    "pla_wachtseconden": {
                        "type": "integer",
                        "example": "195"
                    },
                    "latitude": {
                        "type": "string",
                        "example": "5.538763"
                    },
                    "longitude": {
                        "type": "string",
                        "example": "51.37212"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    },
                    "pla_tx_opmerking": {
                        "type": "string",
                        "example": "customer needed assistance"
                    },
                    "pla_tx_paid_amount": {
                        "type": "number",
                        "example": "12.34"
                    },
                    "pla_tx_paid_extra": {
                        "type": "number",
                        "example": "0.00"
                    },
                    "pla_tx_payment_type": {
                        "type": "integer",
                        "example": "1"
                    },
                    "lsn_id": {
                        "type": "integer",
                        "example": "123"
                    }
                },
                "required": [
                    "pla_id",
                    "pla_tijdstip_vrijmelden",
                    "pla_odo_start",
                    "pla_pasnummer",
                    "pla_wachtseconden",
                    "latitude",
                    "longitude",
                    "speed",
                    "pla_tx_opmerking",
                    "pla_tx_paid_amount",
                    "pla_tx_paid_extra",
                    "pla_tx_payment_type",
                    "lsn_id"
                ]
            },
            "tripstatusupdatedropoffbyguid": {
                "description": "trip status update record",
                "properties": {
                    "pla_guid": {
                        "type": "string",
                        "example": "8D693131-6475-4AB2-84A3-9489CACD54BF"
                    },
                    "pla_tijdstip_vrijmelden": {
                        "type": "string",
                        "example": "2020-09-25T14:11:45"
                    },
                    "pla_odo_stop": {
                        "type": "integer",
                        "example": "125023"
                    },
                    "pla_pasnummer": {
                        "type": "string",
                        "example": "AB-23456789876"
                    },
                    "pla_wachtseconden": {
                        "type": "integer",
                        "example": "195"
                    },
                    "latitude": {
                        "type": "string",
                        "example": "5.538763"
                    },
                    "longitude": {
                        "type": "string",
                        "example": "51.37212"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    },
                    "pla_tx_opmerking": {
                        "type": "string",
                        "example": "customer needed assistance"
                    },
                    "pla_tx_paid_amount": {
                        "type": "number",
                        "example": "12.34"
                    },
                    "pla_tx_paid_extra": {
                        "type": "number",
                        "example": "0.00"
                    },
                    "pla_tx_payment_type": {
                        "type": "integer",
                        "example": "1"
                    },
                    "lsn_id": {
                        "type": "integer",
                        "example": "123"
                    }
                },
                "required": [
                    "pla_id",
                    "pla_tijdstip_vrijmelden",
                    "pla_odo_start",
                    "pla_pasnummer",
                    "pla_wachtseconden",
                    "latitude",
                    "longitude",
                    "speed",
                    "pla_tx_opmerking",
                    "pla_tx_paid_amount",
                    "pla_tx_paid_extra",
                    "pla_tx_payment_type",
                    "lsn_id"
                ]
            },
            "resetuserpassword": {
                "description": "reset user password request record",
                "properties": {
                    "por_id": {
                        "description": "User key",
                        "type": "integer",
                        "example": "1234"
                    },
                    "por_inlogcode": {
                        "description": "Loginname",
                        "type": "string",
                        "example": ""
                    },
                    "hash": {
                        "description": "Hash password",
                        "type": "string",
                        "example": "356dd200ca7b701be8e13a263187cdede83806e6f4f686496467467ec3f69009"
                    }
                },
                "required": [
                    "por_id",
                    "por_inlogcode",
                    "hash"
                ]
            },
            "resetdriverpassword": {
                "description": "reset driver password request record",
                "properties": {
                    "chf_email": {
                        "description": "Driver email address",
                        "type": "string",
                        "example": "g.saey@pitane.com"
                    },
                    "chf_verificatie": {
                        "description": "Verification token",
                        "type": "string",
                        "example": ""
                    },
                    "chf_app_paswoord": {
                        "description": "Password",
                        "type": "string",
                        "example": "secret"
                    }
                },
                "required": [
                    "chf_email",
                    "chf_verificatie",
                    "chf_app_paswoord"
                ]
            },
            "resetcustomerpassword": {
                "description": "reset customer password request record",
                "properties": {
                    "rei_guid": {
                        "description": "Customer guid",
                        "type": "string",
                        "example": "c3424732-d646-47d8-b337-76104a5e6695"
                    },
                    "rei_app_paswoord": {
                        "description": "Password",
                        "type": "string",
                        "example": "secret"
                    }
                },
                "required": [
                    "rei_guid",
                    "rei_app_paswoord"
                ]
            },
            "chf_guid": {
                "description": "driver guid combination",
                "properties": {
                    "chf_guid": {
                        "type": "string",
                        "example": "D015CC84-BC29-4FE4-BA41-4223022ACD64"
                    },
                    "chf_password": {
                        "type": "string",
                        "example": "1254(FGG%GA"
                    }
                },
                "required": [
                    "chf_guid",
                    "chf_password"
                ]
            },
            "rei_guid": {
                "description": "customer guid combination",
                "properties": {
                    "rei_guid": {
                        "type": "string",
                        "example": "D015CC84-BC29-4FE4-BA41-4223022ACD64"
                    },
                    "rei_password": {
                        "type": "string",
                        "example": "1254(FGG%GA"
                    }
                },
                "required": [
                    "rei_guid",
                    "rei_password"
                ]
            },
            "passwordtoken": {
                "description": "password request record",
                "properties": {
                    "dev_password_token": {
                        "type": "string",
                        "example": "123456"
                    },
                    "dev_password_email": {
                        "type": "string",
                        "example": "g.saey@pitane.com"
                    }
                },
                "required": [
                    "dev_password_token",
                    "dev_password_email"
                ]
            },
            "document": {
                "description": "document record",
                "properties": {
                    "doc_extensie": {
                        "type": "string",
                        "example": "pdf"
                    },
                    "doc_binair_c64": {
                        "type": "string",
                        "example": "4654d4sd463a463asd4asd436"
                    },
                    "doc_naam": {
                        "type": "string",
                        "example": "driving licence"
                    },
                    "doc_pincode": {
                        "type": "string",
                        "example": "1712201230"
                    },
                    "doc_api": {
                        "type": "string",
                        "example": "491A324E-AC31-47F3-B1A0-26326D639A09"
                    }
                },
                "required": [
                    "doc_extensie",
                    "dev_naam",
                    "doc_binair_c64",
                    "doc_pincode",
                    "doc_api"
                ]
            },
            "customeremail": {
                "description": "loginname request record",
                "properties": {
                    "por_email": {
                        "type": "string",
                        "example": "g.saey@pitane.com"
                    }
                },
                "required": [
                    "por_email"
                ]
            },
            "rating": {
                "description": "set trip rating",
                "properties": {
                    "pla_id": {
                        "type": "integer",
                        "example": 123456
                    },
                    "pla_punten": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5,
                        "example": 4
                    }
                },
                "required": [
                    "pla_id",
                    "pla_punten"
                ]
            },
            "tariff": {
                "description": "tariff record",
                "properties": {
                    "from_address": {
                        "type": "string",
                        "example": "Marinus van Meelweg 12 Eindhoven"
                    },
                    "to_address": {
                        "type": "string",
                        "example": "Bahialaan 400 Rotterdam"
                    },
                    "rei_id": {
                        "type": "integer",
                        "example": 5093
                    },
                    "rei_vor_id": {
                        "type": "string",
                        "example": "P"
                    },
                    "rei_wso_id": {
                        "type": "string",
                        "example": "T"
                    },
                    "pla_lopers": {
                        "type": "integer",
                        "example": 1
                    },
                    "pla_rollers": {
                        "type": "integer",
                        "example": 0
                    }
                },
                "required": [
                    "from_address",
                    "to_address",
                    "rei_id",
                    "rei_vor_id",
                    "rei_wso_id",
                    "pla_lopers",
                    "pla_rollers"
                ]
            },
            "tariffarrive": {
                "description": "tariff record Arrive",
                "properties": {
                    "from_address": {
                        "type": "string",
                        "example": "Marinus van Meelweg 12 Eindhoven"
                    },
                    "to_address": {
                        "type": "string",
                        "example": "Bahialaan 400 Rotterdam"
                    },
                    "rei_id": {
                        "type": "integer",
                        "example": 5093
                    },
                    "rei_vor_id": {
                        "type": "string",
                        "example": "P"
                    },
                    "rei_wso_id": {
                        "type": "string",
                        "example": "T"
                    },
                    "pla_lopers": {
                        "type": "integer",
                        "example": 1
                    },
                    "pla_rollers": {
                        "type": "integer",
                        "example": 0
                    },
                    "bta_id": {
                        "type": "integer",
                        "example": 123
                    }
                },
                "required": [
                    "from_address",
                    "to_address",
                    "rei_id",
                    "rei_vor_id",
                    "rei_wso_id",
                    "pla_lopers",
                    "pla_rollers",
                    "bta_id"
                ]
            },
            "poi": {
                "description": "poi code",
                "properties": {
                    "vas_code": {
                        "type": "string",
                        "example": "123456"
                    },
                    "pla_id": {
                        "type": "string",
                        "example": "123456"
                    },
                    "latitude": {
                        "type": "number",
                        "example": "51.552422"
                    },
                    "longitude": {
                        "type": "number",
                        "example": "5.542853"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    }
                },
                "required": [
                    "vas_code",
                    "pla_id",
                    "latitude",
                    "longitude",
                    "speed"
                ]
            },
            "routeconfirmation": {
                "description": "route confirmation record",
                "properties": {
                    "pla_pm_nummer": {
                        "type": "integer",
                        "example": "123456"
                    },
                    "pla_route": {
                        "type": "integer",
                        "example": "1234"
                    }
                },
                "required": [
                    "dev_password_token",
                    "dev_password_email"
                ]
            },
            "servicestart": {
                "description": "Service start record",
                "properties": {
                    "lsn_wag_id": {
                        "type": "integer",
                        "example": "123456"
                    },
                    "lsn_chf_id": {
                        "type": "integer",
                        "example": "123456"
                    },
                    "lsn_kilometerstand_aanvang": {
                        "type": "number",
                        "example": "1234.56"
                    },
                    "latitude": {
                        "type": "number",
                        "example": "51.552422"
                    },
                    "longitude": {
                        "type": "number",
                        "example": "5.542853"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    },
                    "chf_subcentrale": {
                        "type": "integer",
                        "example": "0"
                    },
                    "dev_imei": {
                        "type": "string",
                        "example": "1234543SD"
                    }
                },
                "required": [
                    "lsn_wag_id",
                    "lsn_chf_id",
                    "lsn_kilometerstand_aanvang",
                    "latitude",
                    "longitude",
                    "speed",
                    "chf_subcentrale",
                    "dev_imei"
                ]
            },
            "servicestop": {
                "description": "Service stop record",
                "properties": {
                    "lsn_id": {
                        "type": "integer",
                        "example": "123456"
                    },
                    "lsn_kilometerstand_einde": {
                        "type": "number",
                        "example": "1234.56"
                    },
                    "latitude": {
                        "type": "number",
                        "example": "51.552422"
                    },
                    "longitude": {
                        "example": "5.542853"
                    },
                    "speed": {
                        "type": "integer",
                        "example": "10"
                    },
                    "dev_imei": {
                        "type": "string",
                        "example": "1234543SD"
                    }
                },
                "required": [
                    "lsn_id",
                    "lsn_kilometerstand_einde",
                    "latitude",
                    "longitude",
                    "speed",
                    "dev_imei"
                ]
            }
        },
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "pitane-key"
            }
        }
    }
}