{
  "swagger": "2.0",
  "info": {
    "version": "2.0-base",
    "title": "Datarotonde API",
    "description": "\r\n<p>\r\n    This API is used to get data from the CDM.\r\n</p>\r\n<h3>OData</h3>\r\n<p>\r\nAll operations support OData querying. For more information on valid values for the OData parameters on the operations, see <a href=\"http://docs.oasis-open.org/odata/odata/v4.01/\" target=\"_blank\">OData documentation</a>\r\n</p>\r\n<p>\r\nFull querystring example: ?$top=5&$skip=10&$select=AccountNumber,Name,BusinessAddress&$filter=Name eq 'Some name'&$expand=BusinessAddress&$orderby=AccountNumber\r\n</p>\r\n<p>\r\nFilter operations list can be found in the <a href=\"http://docs.oasis-open.org/odata/odata/v4.01/cs01/part1-protocol/odata-v4.01-cs01-part1-protocol.html#sec_SystemQueryOptionfilter\" target=\"_blank\"> OData filter operation protocol specification</a>.\r\nTo filter on child objects use the all or any <a href=\"http://docs.oasis-open.org/odata/odata/v4.01/cs01/part2-url-conventions/odata-v4.01-cs01-part2-url-conventions.html#_Toc505773283\" target=\"_blank\">lambda operators</a> in the filter (using a filter on the $expand operator will not filter the parent objects returned but only filter the child objects returned for a parent object).\r\n</p>\r\n<p>\r\nExample:<br/>\r\n$expand=BusinessAddress($filter=PostalCode eq '1111AA' and HouseNumber eq 1) will return all Business but will only expand BusinessAddress child objects that match the filter.<br/>\r\n$filter=BusinessAddress/any(d:d/PostalCode eq '1111AA' and d/HouseNumber eq 1) will return only Business objects that have at least one BusinessAddress that matches the filter.\r\n</p>\r\n<p>\r\nWhen using the all lambda operator remember that an empty collection will return true. Filter out empty collections by using an empty any lambda.\r\n</p>\r\n<p>\r\nExample: $filter=BusinessAddress/any() and BusinessAddress/all(d:d/PostalCode eq '1111AA')\r\n</p>\r\n<p>\r\nThe service does not support any of the following query options $search, $format, $schemaversion, $count.\r\n</p>\r\n<h3>Deprecation notices</h3>\r\n<h4>API Versions</h4>\r\n<h4>Model fields</h4>\r\n<ul>\r\n  <li>Business</li>\r\n      <ul>\r\n    <li>BusinessNumber</li>\r\n    </ul>\r\n</ul>\r\n"
  },
  "schemes": [
    "https"
  ],
  "paths": {
    "/Business": {
      "get": {
        "tags": [
          "Business"
        ],
        "operationId": "Index",
        "consumes": [
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "description": "Value of correlationid header of request. Must contain valid Guid.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Optional OData parameter: Numeric value for the number of items in the queried collection to be included in the result",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Optional OData parameter: Numeric value for the number of items in the queried collection that are to be skipped and not included in the result",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Optional OData parameter: Comma seperated list of properties to be included in the result. Used to redefine the result structure",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Optional OData parameter: Filter expression that is applied to the queried collection",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Optional OData parameter: Expand expression used to include complex type properties in the result structure",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Optional OData parameter: Comma seperated list of properties to sort queried collection",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              
              "type": "array",
              "items": {
                "$ref": "#/definitions/Business"
              }
            }
          }
        }
      }
    },
    "/Business/{accountNumbers}": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "Search all businesses with account number(s) and additional optional OData queries",
        "operationId": "Get",
        "consumes": [
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountNumbers",
            "in": "path",
            "description": "A comma separated list of valid positive integers representing account numbers",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            
          },
          {
            "name": "api-version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "description": "Value of correlationid header of request. Must contain valid Guid.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Optional OData parameter: Numeric value for the number of items in the queried collection to be included in the result",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Optional OData parameter: Numeric value for the number of items in the queried collection that are to be skipped and not included in the result",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Optional OData parameter: Comma seperated list of properties to be included in the result. Used to redefine the result structure",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Optional OData parameter: Filter expression that is applied to the queried collection",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Optional OData parameter: Expand expression used to include complex type properties in the result structure",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Optional OData parameter: Comma seperated list of properties to sort queried collection",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              
              "type": "array",
              "items": {
                "$ref": "#/definitions/Business"
              }
            }
          }
        }
      }
    },
    "/Business/Search": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "Search employees with account, name and/or email using AND or OR logic. Search is case-insensitive.",
        "operationId": "Search",
        "consumes": [
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "searchEngagementNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchStatus",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchCity",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchEstablishment",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchRegionNameOrCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchCluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "usingAnd",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "description": "Value of correlationid header of request. Must contain valid Guid.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Optional OData parameter: Numeric value for the number of items in the queried collection to be included in the result",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Optional OData parameter: Numeric value for the number of items in the queried collection that are to be skipped and not included in the result",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Optional OData parameter: Comma seperated list of properties to be included in the result. Used to redefine the result structure",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Optional OData parameter: Filter expression that is applied to the queried collection",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Optional OData parameter: Expand expression used to include complex type properties in the result structure",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Optional OData parameter: Comma seperated list of properties to sort queried collection",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              
              "type": "array",
              "items": {
                "$ref": "#/definitions/Employee"
              }
            }
          }
        }
      }
    },
    "/Business/{accountNumbers}/Contacts": {
      "get": {
        "tags": [
          "Business Contacts"
        ],
        "summary": "Search the contacts for businesses with account number(s) and additional optional OData queries",
        "operationId": "GetContacts",
        "consumes": [
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountNumbers",
            "in": "path",
            "description": "A comma separated list of valid positive integers representing account numbers",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
            
          },
          {
            "name": "api-version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "description": "Value of correlationid header of request. Must contain valid Guid.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Optional OData parameter: Numeric value for the number of items in the queried collection to be included in the result",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Optional OData parameter: Numeric value for the number of items in the queried collection that are to be skipped and not included in the result",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Optional OData parameter: Comma seperated list of properties to be included in the result. Used to redefine the result structure",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Optional OData parameter: Filter expression that is applied to the queried collection",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Optional OData parameter: Expand expression used to include complex type properties in the result structure",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Optional OData parameter: Comma seperated list of properties to sort queried collection",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessContact"
              }
            }
          }
        }
      }
    },
    "/Business/{accountNumbers}/Engagements": {
      "get": {
        "tags": [
          "Business Engagement"
        ],
        "summary": "Search the engagements for businesses with account number(s) and additional optional OData queries",
        "operationId": "GetEngagements",
        "consumes": [
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountNumbers",
            "in": "path",
            "description": "A comma seperated list of valid positive integers representing account numbers",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
            
          },
          {
            "name": "api-version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "description": "Value of correlationid header of request. Must contain valid Guid.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Optional OData parameter: Numeric value for the number of items in the queried collection to be included in the result",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Optional OData parameter: Numeric value for the number of items in the queried collection that are to be skipped and not included in the result",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Optional OData parameter: Comma seperated list of properties to be included in the result. Used to redefine the result structure",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Optional OData parameter: Filter expression that is applied to the queried collection",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Optional OData parameter: Expand expression used to include complex type properties in the result structure",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Optional OData parameter: Comma seperated list of properties to sort queried collection",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessEngagement"
              }
            }
          }
        }
      }
    },
    "/Business/{accountNumbers}/LegalStructure": {
      "get": {
        "tags": [
          "Business LegalStructure"
        ],
        "summary": "Search the legalstructure for businesses with account number(s) and additional optional OData queries",
        "operationId": "GetLegalStructure",
        "consumes": [
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountNumbers",
            "in": "path",
            "description": "A comma separated list of valid positive integers representing account numbers",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
            
          },
          {
            "name": "api-version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "header",
            "description": "Value of correlationid header of request. Must contain valid Guid.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Optional OData parameter: Numeric value for the number of items in the queried collection to be included in the result",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Optional OData parameter: Numeric value for the number of items in the queried collection that are to be skipped and not included in the result",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Optional OData parameter: Comma seperated list of properties to be included in the result. Used to redefine the result structure",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Optional OData parameter: Filter expression that is applied to the queried collection",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Optional OData parameter: Expand expression used to include complex type properties in the result structure",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Optional OData parameter: Comma seperated list of properties to sort queried collection",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessLegalStructure"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Business": {
      "type": "object",
      "properties": {
        "number": {
          "format": "int32",
          "type": "integer"
        },
        "businessNumber": {
          "format": "int32",
          "description": "BusinessNumber is obsolete use AccountNumber",
          "type": "integer",
          "readOnly": true
        },
        "accountNumber": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "nameAddition": {
          "type": "string"
        },
        "searchName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "kindOob": {
          "type": "string"
        },
        "kindAssurance": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "domicile": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "clusterCode": {
          "type": "string"
        },
        "ltd": {
          "type": "string"
        },
        "chamberOfCommerce": {
          "type": "string"
        },
        "chamberOfCommerceSub": {
          "type": "string"
        },
        "legalFormShort": {
          "type": "string"
        },
        "personnelFrom": {
          "format": "int32",
          "type": "integer"
        },
        "personnelTo": {
          "format": "int32",
          "type": "integer"
        },
        "accountManager": {
          "type": "string"
        },
        "accountManagerEmployeeId": {
          "format": "int32",
          "type": "integer"
        },
        "responsibleBa": {
          "type": "string"
        },
        "responsibleBaemployeeId": {
          "format": "int32",
          "type": "integer"
        },
        "responsibleRa": {
          "type": "string"
        },
        "responsibleRaemployeeId": {
          "format": "int32",
          "type": "integer"
        },
        "website": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "telephone": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "stern": {
          "type": "string"
        },
        "segmentCode": {
          "type": "string"
        },
        "segment": {
          "type": "string"
        },
        "sbi": {
          "type": "string"
        },
        "legalForm": {
          "type": "string"
        },
        "bikBrancheCode": {
          "type": "string"
        },
        "bikBranche": {
          "type": "string"
        },
        "internalBusinessId": {
          "format": "int32",
          "type": "integer"
        },
        "region": {
          "type": "string"
        },
        "regionCode": {
          "type": "string"
        },
        "sbiDescription": {
          "type": "string"
        },
        "vatNumber": {
          "type": "string"
        },
        "businessAddress": {
          
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessAddress"
          }
        },
        "businessNote": {
          
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessNote"
          }
        },
        "businessContact": {
          
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessContact"
          }
        },
        "businessEngagement": {
          
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessEngagement"
          }
        },
        "businessLegalStructure": {
          
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessLegalStructure"
          }
        }
      }
    },
    "BusinessAddress": {
      "type": "object",
      "properties": {
        "businessAddressId": {
          "format": "int32",
          "type": "integer"
        },
        "businessNumber": {
          "format": "int32",
          "description": "BusinessNumber is obsolete use AccountNumber",
          "type": "integer",
          "readOnly": true
        },
        "accountNumber": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "houseNumber": {
          "format": "int32",
          "type": "integer"
        },
        "houseNumberAddition": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "municipality": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "fullAddress": {
          "type": "string"
        }
      }
    },
    "BusinessNote": {
      "type": "object",
      "properties": {
        "businessNoteId": {
          "format": "int32",
          "type": "integer"
        },
        "note": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "businessNumber": {
          "format": "int32",
          "description": "BusinessNumber is obsolete use AccountNumber",
          "type": "integer",
          "readOnly": true
        },
        "accountNumber": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BusinessContact": {
      "type": "object",
      "properties": {
        "businessContactId": {
          "format": "int32",
          "type": "integer"
        },
        "fullName": {
          "maxLength": 53,
          "type": "string"
        },
        "emailBusiness": {
          "maxLength": 50,
          "type": "string"
        },
        "emailPrivate": {
          "maxLength": 50,
          "type": "string"
        },
        "telephone": {
          "maxLength": 20,
          "type": "string"
        },
        "mobilePhone": {
          "maxLength": 20,
          "type": "string"
        },
        "businessFunction": {
          "maxLength": 50,
          "type": "string"
        },
        "primaryContact": {
          "maxLength": 3,
          "type": "string"
        },
        "firstName": {
          "maxLength": 15,
          "type": "string"
        },
        "middleName": {
          "maxLength": 10,
          "type": "string"
        },
        "lastName": {
          "maxLength": 30,
          "type": "string"
        },
        "businessNumber": {
          "format": "int32",
          "description": "BusinessNumber is obsolete use AccountNumber",
          "type": "integer",
          "readOnly": true
        },
        "accountNumber": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BusinessEngagement": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "number": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "maxLength": 50,
          "type": "string"
        },
        "engagementDescription": {
          "type": "string"
        },
        "stern": {
          "maxLength": 3,
          "type": "string"
        },
        "blockingDate": {
          "format": "date-time",
          "type": "string"
        },
        "engagementType": {
          "maxLength": 50,
          "type": "string"
        },
        "assuranceType": {
          "maxLength": 3,
          "type": "string"
        },
        "accreditationRequired": {
          "maxLength": 3,
          "type": "string"
        },
        "unit": {
          "maxLength": 50,
          "type": "string"
        },
        "domicile": {
          "maxLength": 30,
          "type": "string"
        },
        "region": {
          "maxLength": 30,
          "type": "string"
        },
        "regionCode": {
          "format": "int32",
          "type": "integer"
        },
        "responsiblePerson": {
          "maxLength": 30,
          "type": "string"
        },
        "businessNumber": {
          "format": "int32",
          "description": "BusinessNumber is obsolete use AccountNumber",
          "type": "integer",
          "readOnly": true
        },
        "accountNumber": {
          "format": "int32",
          "type": "integer"
        },
        "acceptance": {
          
          "type": "array",
          "items": {
            "$ref": "#/definitions/EngagementAcceptance"
          }
        },
        "business": {
          "$ref": "#/definitions/Business"
        }
      }
    },
    "BusinessLegalStructure": {
      "type": "object",
      "properties": {
        "businessLegalStructureId": {
          "format": "int32",
          "type": "integer"
        },
        "baseBusinessNumber": {
          "format": "int32",
          "type": "integer"
        },
        "businessParentNumber": {
          "format": "int32",
          "type": "integer"
        },
        "businessNumber": {
          "format": "int32",
          "description": "BusinessNumber is obsolete use AccountNumber",
          "type": "integer",
          "readOnly": true
        },
        "accountNumber": {
          "format": "int32",
          "type": "integer"
        },
        "businessName": {
          "type": "string"
        },
        "businessParentName": {
          "type": "string"
        },
        "businessParentBlocked": {
          "type": "boolean"
        },
        "businessBlocked": {
          "type": "boolean"
        }
      }
    },
    "EngagementAcceptance": {
      "type": "object",
      "properties": {
        "clientAcceptanceId": {
          "format": "int32",
          "type": "integer"
        },
        "acceptanceLink": {
          "type": "string"
        },
        "isNewEngagement": {
          "maxLength": 50,
          "type": "string"
        },
        "isNewBusiness": {
          "maxLength": 50,
          "type": "string"
        },
        "endFiscalYear": {
          "format": "date-time",
          "type": "string"
        },
        "servicePeriodStart": {
          "format": "date-time",
          "type": "string"
        },
        "servicePeriodEnd": {
          "format": "date-time",
          "type": "string"
        },
        "assurancePeriodStart": {
          "format": "date-time",
          "type": "string"
        },
        "assurancePeriodEnd": {
          "format": "date-time",
          "type": "string"
        },
        "lineOfService": {
          "maxLength": 50,
          "type": "string"
        },
        "businessEngagementId": {
          "format": "int32",
          "type": "integer"
        },
        "acceptanceService": {
          
          "type": "array",
          "items": {
            "$ref": "#/definitions/AcceptanceService"
          }
        }
      }
    },
    "AcceptanceService": {
      "type": "object",
      "properties": {
        "acceptanceServiceId": {
          "format": "int32",
          "type": "integer"
        },
        "clientAcceptanceId": {
          "format": "int32",
          "type": "integer"
        },
        "service": {
          "maxLength": 30,
          "type": "string"
        }
      }
    },
    "Employee": {
      "type": "object",
      "properties": {
        "binNumber": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "employeeNumber": {
          "format": "int32",
          "type": "integer"
        },
        "fullName": {
          "maxLength": 150,
          "minLength": 0,
          "type": "string"
        },
        "firstName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "initials": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "isPmAuthorized": {
          "type": "boolean"
        },
        "surname": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "gender": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "birthday": {
          "format": "date-time",
          "type": "string"
        },
        "employ": {
          "format": "date-time",
          "type": "string"
        },
        "fromEmployment": {
          "format": "date-time",
          "type": "string"
        },
        "fromEmploymentUtc": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "function": {
          "maxLength": 150,
          "minLength": 0,
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "managerBinNumber": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "discipline": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "disciplineCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "placeOfBusiness": {
          "maxLength": 150,
          "minLength": 0,
          "type": "string"
        },
        "placeOfBusinessCode": {
          "maxLength": 150,
          "minLength": 0,
          "type": "string"
        },
        "organizationLayer": {
          "format": "int32",
          "type": "integer"
        },
        "functionGroup": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "windowsAccount": {
          "maxLength": 150,
          "minLength": 0,
          "type": "string"
        },
        "email": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "userPrincipalName": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "lineOfService": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "type": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "specialism": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "specialismCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "businessPhone": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "mobilePhone": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "costCenter": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "costCenterCode": {
          "format": "int32",
          "type": "integer"
        },
        "street": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "addressHouseNumber": {
          "format": "int32",
          "type": "integer"
        },
        "addressHouseNumberAddition": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "postalCode": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "city": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "country": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "practiceCode": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "practiceName": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "titleSuffix": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "regionCode": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "contractHoursWeekly": {
          "format": "double",
          "type": "number"
        },
        "maritalStatus": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "professionalOrganisation": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "internalFunctions": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "isQrm": {
          "type": "boolean"
        },
        "managerName": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "managerEmployeeNumber": {
          "format": "int32",
          "type": "integer"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string"
        },
        "contracts": {
          
          "type": "array",
          "items": {
            "$ref": "#/definitions/Contract"
          }
        },
        "accountancy": {
          "$ref": "#/definitions/Accountancy"
        },
        "employeeProject": {
          
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeProject"
          }
        }
      }
    },
    "Contract": {
      "type": "object",
      "properties": {
        "contractId": {
          "format": "int32",
          "type": "integer"
        },
        "employeeNumber": {
          "format": "int32",
          "type": "integer"
        },
        "binNumber": {
          "type": "string"
        },
        "function": {
          "type": "string"
        },
        "functionCode": {
          "type": "string"
        },
        "functionGroup": {
          "type": "string"
        },
        "specialism": {
          "type": "string"
        },
        "specialismCode": {
          "type": "string"
        },
        "organizationLayer": {
          "format": "int32",
          "type": "integer"
        },
        "placeOfBusiness": {
          "type": "string"
        },
        "placeOfBusinessCode": {
          "type": "string"
        },
        "fromEmploymentUtc": {
          "format": "date-time",
          "type": "string"
        },
        "startDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "endDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "contractType": {
          "type": "string"
        },
        "contractTypeCode": {
          "type": "string"
        },
        "costCenter": {
          "format": "int32",
          "type": "integer"
        },
        "schedule": {
          
          "type": "array",
          "items": {
            "$ref": "#/definitions/Schedule"
          }
        },
        "legalEntityCode": {
          "type": "string"
        }
      }
    },
    "Accountancy": {
      "type": "object",
      "properties": {
        "binNumber": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "nivraRegistrationNumber": {
          "format": "int32",
          "type": "integer"
        },
        "nivraRegistrationDate": {
          "format": "date-time",
          "type": "string"
        },
        "nivraDeregistrationDate": {
          "format": "date-time",
          "type": "string"
        },
        "novaaRegistrationNumber": {
          "format": "int32",
          "type": "integer"
        },
        "novaaRegistrationDate": {
          "format": "date-time",
          "type": "string"
        },
        "novaaDeregistrationDate": {
          "format": "date-time",
          "type": "string"
        },
        "nobRegistrationNumber": {
          "format": "int32",
          "type": "integer"
        },
        "nobRegistrationDate": {
          "format": "date-time",
          "type": "string"
        },
        "nobDeregistrationDate": {
          "format": "date-time",
          "type": "string"
        },
        "otherProfessionalAssociationCode": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "otherProfessionalAssociationRegistrationNumber": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "otherProfessionalAssociationRegistrationDate": {
          "format": "date-time",
          "type": "string"
        },
        "otherProfessionalAssociationDeregistrationDate": {
          "format": "date-time",
          "type": "string"
        },
        "permanentEducationObligation": {
          "type": "boolean"
        },
        "permanentEducationObligationStartDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "EmployeeProject": {
      "type": "object",
      "properties": {
        "binNumber": {
          "type": "string"
        },
        "projectNumber": {
          "type": "string"
        }
      }
    },
    "Schedule": {
      "type": "object",
      "properties": {
        "scheduleId": {
          "format": "int32",
          "type": "integer"
        },
        "employeeNumber": {
          "format": "int32",
          "type": "integer"
        },
        "employee": {
          "$ref": "#/definitions/Employee"
        },
        "contractId": {
          "format": "int32",
          "type": "integer"
        },
        "weekNumber": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfHours": {
          "format": "int32",
          "type": "integer"
        },
        "days": {
          
          "type": "array",
          "items": {
            "$ref": "#/definitions/Day"
          }
        }
      }
    },
    "Day": {
      "type": "object",
      "properties": {
        "dayId": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleId": {
          "format": "int32",
          "type": "integer"
        },
        "weekDay": {
          "type": "string"
        },
        "duration": {
          "format": "double",
          "type": "number"
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
  ]
}